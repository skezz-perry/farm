script_version('0.1.4 beta')

require 'lib.moonloader'
local inicfg = require 'inicfg'
local vkeys = require 'vkeys'
local font_flag = require('moonloader').font_flag
local imgui = require 'imgui'
local encoding = require 'encoding'
local memory = require 'memory'
local https = require 'ssl.https'
local downloadStatus = require('moonloader').download_status
levent, event = pcall(require, 'lib.samp.events')
encoding.default = 'CP1251'
u8 = encoding.UTF8

local font = renderCreateFont('Arial', 8.2, font_flag.BOLD + font_flag.SHADOW)
local mfont = renderCreateFont('Century Gothic', 8.4, font_flag.BOLD)
local ufont = renderCreateFont('Century Gothic', 8.4, font_flag.BOLD)

local globalPlayerRang = 1
local selectionPoint = 1
local render_draw_menu = imgui.ImBool(false)
local render_draw_selection = imgui.ImBool(false)

local ini = inicfg.load({
	user = {
		autoloadfarm = false
	},
	vegetation = {},
	animal = {},
	store = {
		water = 0,
		wheat = 0,
		potato = 0,
		corn = 0,
		hemp = 0,
		tea = 0
	},
	another = {}
}, 'farming.ini')

local global = {
	vegetation = {},
	animal = {},
	store = {
		all = 0,
		wheat = 0,
		potato = 0,
		corn = 0,
		hemp = 0,
		tea = 0
	},
	another = {}
}

local defaultInfoText = {
	'Данный скрипт является дополнением для полноценной работы крестьянско-фермерского хозяйства «Комета».',
	'Его основной задачей является дополнение игрового окружения различными объектами и интерфейсами.',
	'~',
	'Если Вы будете использовать возможности данного скрипта в корыстных целях, то вы будете заблокированы..',
	'.. как на сервере, администрацией, так и в самом скрипте. Обжалование подобных блокировок невозможно.',
	'~',
	'Важно! При использовании данного скрипта вы соглашаетесь предоставлять информацию о вашем игровом нике,',
	'ip-адрессе сервера, на которым вы авторизовались, и о серийном номере вашего логического диска (для более..',
	'.. корректной идентификации вас как пользователя скрипта).',
	'~',
	'Разработчик Joachim Ribbentrop (Skezz Perry)',
	'Версия скрипта ' .. thisScript().version
}

local informationOfCommands = {
	[1] = {
		name = 'fmenu',
		access = 1,
		parametrs = {
			'Необходимые параметры – отсутствуют.',
		},
		description = {
			'Отображает основное меню.'
		}
	},
	[2] = {
		name = 'fsmenu',
		access = 2,
		parametrs = {
			'Необходимые параметры – отсутствуют.',
		},
		description = {
			'Отображает меню для селекции растений.'
		}
	},
	[3] = {
		name = 'fload',
		access = 1,
		parametrs = {
			'Необходимые параметры – отсутствуют.',
		},
		description = {
			'Загружает объекты, растения и животных в глобальный мир.'
		}
	},
	[4] = {
		name = 'freload',
		access = 1,
		parametrs = {
			'Необходимые параметры – отсутствуют.',
		},
		description = {
			'Перезагружает игровой помощник, очищает глобальный мир от созданных объектов.'
		}
	},
	[5] = {
		name = 'vcreate',
		access = 3,
		parametrs = {
			'Необходимые параметры – [название] [модель] [fix] [kd1] [kd2] [kd3] [day1] [day2].',
			'{ff4747}Название{dbede3} – Наименование растение.',
			'{ff4747}Модель{dbede3} – ID модели объекта SAMP.',
			'{ff4747}FIX{dbede3} – Исправление координаты по оси Z.',
			'{ff4747}KD1{dbede3} – Число дней, через которое растение начнёт требовать полив.',
			'{ff4747}KD2{dbede3} – Число дней, через которое растение погибнет от засухи.',
			'{ff4747}KD3{dbede3} – Число дней, через которое растение будет готово к сбору.',
			'{ff4747}DAY1{dbede3} – День месяца последнего полива растения.',
			'{ff4747}DAY2{dbede3} – День месяца, когда растение было посажено.'
		},
		description = {
			'Описание временно не доступно.'
		}
	},
	[6] = {
		name = 'vscreate',
		access = 3,
		parametrs = {
			'Необходимые параметры – [ид растения] [дистанция между растениями].',
			'{ff4747}ID растения{dbede3} – ID растения, с которого необходимо произвести копирование.',
			'{ff4747}Дистания между растениями{dbede3} – Расстояние между растениями.',
		},
		description = {
			'Описание временно не доступно.'
		}
	},
	[7] = {
		name = 'vdelete',
		access = 1,
		parametrs = {
			'Необходимые параметры – [ид растения] (последний ид).',
			'{ff4747}ID растения{dbede3} – ID растения с которого нужно начать удаление.',
			'{ff4747}Последний ID{dbede3} – ID растения по который, включительно, нужно удалить растения.',
		},
		description = {
			'Удаляет одно или несколько растений с глобальной карты и исключает их из файла конфигурации.'
		}
	},
	[8] = {
		name = 'vsave',
		access = 3,
		parametrs = {
			'Необходимые параметры – [ид растения].',
			'{ff4747}ID растения{dbede3} – ID растения, которое нужно сохранить.',
		},
		description = {
			'Сохраняет растение и его настройки в файле конфигурации (неактуально).'
		}
	},
	[9] = {
		name = 'orender',
		access = 1,
		parametrs = {
			'Необходимые параметры – отсутсвуют.'
		},
		description = {
			'Отображает ID объектов из локального файла конфигурации и ID их моделей.'
		}
	},
	[10] = {
		name = 'ocreate',
		access = 3,
		parametrs = {
			'Необходимые параметры – [ид модели] (ид объекта).',
			'{ff4747}ID модели{dbede3} – ID модели объекта SAMP.',
			'{ff4747}ID объекта{dbede3} – ID объекта, с которого нужно скопировать позицию.'
		},
		description = {
			'Создаёт визуальный объект без коллизии.'
		}
	},
	[11] = {
		name = 'oedit',
		access = 3,
		parametrs = {
			'Необходимые параметры – [ид объекта] (скорость движения) (скорость вращения).',
			'{ff4747}ID объекта{dbede3} – ID объекта из локального файла конфигурации.',
			'{ff4747}Скорость движения{dbede3} – Скорость с которой будет двигаться объект.',
			'{ff4747}Скорость вращения{dbede3} – Скорость с которой будет вращаться объект.'
		},
		description = {
			'Позволяет редактировать положение объекта в пространстве.',
			'При зажатой клавише ПКМ объект будет вращаться по указанным ниже осям.',
			'{ff4747}Num 2 (8){dbede3} – Изменить позицию объекта по оси Y.',
			'{ff4747}Num 4 (6){dbede3} – Изменить позицию объекта по оси X.',
			'{ff4747}Left Alt и Space{dbede3} – Изменить позицию объекта по оси Z.'
		}
	},
	[12] = {
		name = 'odelete',
		access = 1,
		parametrs = {
			'Необходимые параметры – [ид объекта].',
			'{ff4747}ID объекта{dbede3} – ID объекта из локального файла конфигурации.',
		},
		description = {
			'Удаляет загруженный объект с глобальный карты и исключает его из файла конфигурации.'
		}
	},
	[13] = {
		name = 'anims',
		access = 5,
		parametrs = {
			'Необходимые параметры – [ид анимации].',
			'{ff4747}ID анимации{dbede3} – ID анимации, которую нужно проиграть.',
		},
		description = {
			'Активирует (или очищает все анимации) анимацию из локального списка.'
		}
	},
	[14] = {
		name = 'iconvert',
		access = 5,
		parametrs = {
			'Необходимые параметры – отсутсвуют.'
		},
		description = {
			'Конвертирует и копирует в буффер-обмена информацию из файла конфигурации.'
		}
	},
	[15] = {
		name = 'coords',
		access = 5,
		parametrs = {
			'Необходимые параметры – отсутсвуют.'
		},
		description = {
			'Копирует текущие координаты персонажа в буффер-обмена.'
		}
	}
}

local qualityValue = {[1] = '{FFC74E}Низкая', [2] = '{28D664}Средняя', [3] = '{FF6E4E}Высокая'}

local scriptColor = {
	['{RED}'] = {'{FF6E4E}', 0xFFFF6E4E},
	['{GREEN}'] = {'{28D664}', 0xFF28D664},
	['{YELLOW}'] = {'{FFC74E}', 0xFFFFC74E},
	['{CLEAR}'] = {'{e6e6fa}', 0xFFe6e6fa}
}

local selectionEvent = {
	[1] = {
		position = {x = 1051.8305664063, y = -313.32299804688, z = 73.99308013916},
		text = {
			[1] = '{28D664}Шкаф с растениями.{e6e6fa} Нажмите {FFC74E}RButt + Alt{e6e6fa}, чтобы достать растения.',
			[2] = '{28D664}Шкаф с растениями.{e6e6fa} Процесс...',
			ELSE = '{28D664}Шкаф с растениями.{e6e6fa} Сейчас это Вам недоступно.'
		},
		callback = {
			[1] = function()
				lua_thread.create(function()
					selectionPoint = 2
					printStringNow('Drawer opens, ~y~wait~w~...', 2480)
					lockPlayerControl(true) playAnim('INT_SHOP shop_loop') wait(2500) lockPlayerControl(false) playAnimStatus = true
					
					addChat('Если Вы {YELLOW}случайно закрыли ImGui-меню{CLEAR}, то можно открыть его снова командой /fsmenu.')
					render_draw_selection.v = true
					stopLoadingSelection = nil 
				end)
			end
		}
	},
	[2] = {
		position = {x = 1042.0600585938, y = -303.2822265625, z = 73.99308013916},
		text = {
			[3] = '{28D664}Анализатор.{e6e6fa} Для начала исследования нажмите {FFC74E}RButt + Alt{e6e6fa}.',
			[4] = '{28D664}Анализатор.{e6e6fa} Процесс...',
			[6] = '{28D664}Анализатор.{e6e6fa} Для начала исследования нажмите {FFC74E}RButt + Alt{e6e6fa}.',
			[7] = '{28D664}Анализатор.{e6e6fa} Процесс...',
			ELSE = '{28D664}Анализатор.{e6e6fa} Сейчас это Вам недоступно.'
		},
		callback = {
			[3] = function()
				lua_thread.create(function()
					selectionPoint = 4
					lockPlayerControl(true)
					playAnim('INT_SHOP shop_cashier')
					printStringNow('Putting samples in the device, ~y~wait~w~...', 4480)
					wait(2500) 
					playAnim(0)
					playAnim('INT_SHOP shop_loop')
					wait(2000)
					
					lockPlayerControl(false) playAnimStatus = true
						
					addChat('Если Вы {YELLOW}случайно закрыли ImGui-меню{CLEAR}, то можно открыть его снова командой /fsmenu.')
					render_draw_selection.v = true
					stopLoadingSelection = nil
				end)
			end,
			[6] = function()
				lua_thread.create(function()
					playAnim('INT_SHOP shop_cashier')
						
					selectionPoint = 7
					lockPlayerControl(true)
					printStringNow('Putting samples in the device, ~y~wait~w~...', 4480)
					wait(2500)
					playAnim(0)
					playAnim('INT_SHOP shop_loop')
					wait(2000)
					
					lockPlayerControl(false) playAnimStatus = true
				
					addChat('Если Вы {YELLOW}случайно закрыли ImGui-меню{CLEAR}, то можно открыть его снова командой /fsmenu.')
					render_draw_selection.v = true
					stopLoadingSelection = nil
				end)
			end
		}
	},
	[3] = {
		position = {x = 1039.6477050781, y = -312.57791137695, z = 73.99308013916},
		text = {
			[5] = '{28D664}Рабочее место №1.{e6e6fa} Для проведения скрещевания растений нажмите {FFC74E}RButt + Alt{e6e6fa}.',
			ELSE = '{28D664}Рабочее место №1.{e6e6fa} Сейчас это Вам недоступно.'
		},
		callback = {
			[5] = function()
				--addChat('Если Вы {YELLOW}случайно закрыли ImGui-меню{CLEAR}, то можно открыть его снова командой /fsmenu.')
				render_draw_selection.v = true
				stopLoadingSelection = nil
				--selectionPoint = 6
			end
		}
	},
	[4] = {
		position = {x = 1040.2897949219, y = -306.2, z = 73.99308013916},
		text = {
			ELSE = '{28D664}Рабочее место №2.{e6e6fa} Сейчас это Вам недоступно.'
		},
		callback = {
			--[1] = function() addChat('Открываем меню для события...') end
		}
	}
}

function main()
	if not isSampLoaded() or not isSampfuncsLoaded() then return end
	while not isSampAvailable() do wait(100) end
	
	autoUpdate('https://raw.githubusercontent.com/skezz-perry/farm/master/version', 'https://raw.githubusercontent.com/skezz-perry/farm/master/project')

	sampRegisterChatCommand('spoint', function(point)
		if globalPlayerRang < 5 then 
			addChat('Для работы с данным функционалом {RED}требуется более высокий уровень{CLEAR} полномочий.')
			return
		end
		
		if tonumber(point) then
			if tonumber(point) > 4 and not selectionResult then
				addChat('Без выполнения {YELLOW}4 этапа {RED}невозможно продолжить работу{CLEAR} над селекцией.')
				return
			end
			
			selectionPoint = tonumber(point)
			addChat(string.format('Вы {GREEN}установили значение этапа{CLEAR} селекции на {YELLOW}%s{CLEAR}.', point))
		else
			addChat('Введите необходимые параметры для /spoint [point].')
		end
	end)
	
	sampRegisterChatCommand('coords', function()
		if globalPlayerRang < 5 then 
			addChat('Для работы с данным функционалом {RED}требуется более высокий уровень{CLEAR} полномочий.')
			return
		end
		
		local x, y, z = getCharCoordinates(playerPed)
		setClipboardText(x .. ', ' .. y .. ', ' .. z)
	end)

	sampRegisterChatCommand('vcreate', function(parametrs)
		if globalPlayerRang < 3 then 
			addChat('Для работы с данным функционалом {RED}требуется более высокий уровень{CLEAR} полномочий.')
			return
		end
	
		if loadfarm then
			if string.match(parametrs, '(%S+) (%d+) (%S+) (%d+) (%d+) (%d+) (%d+) (%d+)') then
				createVegs(parametrs)
			else
				addChat('Введите необходимые параметры для /vcreate [название] [модель] [fix] [kd1] [kd2] [kd3] [day1] [day2].')
			end
		else
			addChat('Локация ещё {YELLOW}не была загружена{CLEAR}. Для её загрузки введите команду /fload.')
		end
	end)
	
	sampRegisterChatCommand('vscreate', function(parametrs)
		if globalPlayerRang < 3 then 
			addChat('Для работы с данным функционалом {RED}требуется более высокий уровень{CLEAR} полномочий.')
			return
		end
	
		if loadfarm then
			if string.match(parametrs, '(%d+) (%d+)') then
				local index, distance = string.match(parametrs, '(%d+) (%d+)')
				local index, distance = tonumber(index), tonumber(distance)
				
				if global.vegetation[index] then
					if distance >= 3 then
						local x1, y1 = getCoordinates()
						local x2, y2, z = global.vegetation[index].position.x, global.vegetation[index].position.y
						
						local deltaX, deltaY = math.floor((x1 - x2) / distance), math.floor((y1 - y2) / distance)
						
						for i = 0, deltaX do
							local x = x2 + distance * i
		
							for _i = 0, deltaY do
								local y = y2 + distance * _i
								
								if not clearRadius(x, y, z) then
									if not (distance * i == 0 and distance * _i == 0) then
										table.insert(global.vegetation, #ini.vegetation + 1, global.vegetation[#global.vegetation])
										global.vegetation[#global.vegetation].position.x = x
										global.vegetation[#global.vegetation].position.y = y
										local quality = getRandomQuality()
										global.vegetation[#global.vegetation].quality = quality
										saveVegetation(#global.vegetation, true)
									end
								end
							end
						end
						
						inicfg.save(ini, 'farming.ini')
						addChat('Вы {GREEN}успешно размножили{CLEAR} растение по заданной площади. Требуется {YELLOW}загрузка локации{CLEAR} (/fload).')
						thisScript():reload()
					else
						addChat('Расстояние между растениями {YELLOW}не должно быть менее 3х метров{CLEAR}.')
					end
				else
					addChat(' не существует, проверьте правильность ID.')
				end
			else
				addChat('Введите необходимые параметры для /vscreate [ид растения] [дистанция между растениями].')
			end
		else
			addChat('Локация ещё {YELLOW}не была загружена{CLEAR}. Для её загрузки введите команду /fload.')
		end
	end)
	
	sampRegisterChatCommand('vdelete', function(parametrs)
		if globalPlayerRang < 3 then 
			addChat('Для работы с данным функционалом {RED}требуется более высокий уровень{CLEAR} полномочий.')
			return
		end
	
		if string.match(parametrs, '(%d+) (%d+)') then
			local _index, last = string.match(parametrs, '(%d+) (%d+)')
			local _index, last = tonumber(_index), tonumber(last)
			
			for index = _index, last do
				if index then
					if global.vegetation[index] then
						if global.vegetation[index].handle then
							if doesObjectExist(global.vegetation[index].handle) then
								deleteObject(global.vegetation[index].handle)
							end
						end
						
						global.vegetation[index] = nil
						ini.vegetation[index] = nil
					end
				end
			end
			
			inicfg.save(ini, 'farming.ini')
			addChat('Вы {GREEN}успешно удалили растения{CLEAR} в заданном диапозоне, информация о них была удалена.')
		elseif string.match(parametrs, '(%d+)') then
			local index = tonumber(string.match(parametrs, '(%d+)'))
			if index then
				if global.vegetation[index] then
					if global.vegetation[index].handle then
						if doesObjectExist(global.vegetation[index].handle) then
							deleteObject(global.vegetation[index].handle)
						end
					end
					
					global.vegetation[index] = nil
					ini.vegetation[index] = nil
					inicfg.save(ini, 'farming.ini')
					addChat('Вы {GREEN}успешно удалили растение{CLEAR}, информация о нём была удалена.')
				else
					addChat('Растение с таким ID {RED}не было найдено{CLEAR} в файле конфигурации, проверьте правильность введённого ID.')
				end
			end
		else
			addChat('Введите необходимые параметры для /vdelete [ид растения] (последний ид).')
		end
	end)
	
	sampRegisterChatCommand('vsave', function(index)
		if globalPlayerRang < 3 then 
			addChat('Для работы с данным функционалом {RED}требуется более высокий уровень{CLEAR} полномочий.')
			return
		end
	
		local index = tonumber(index)
		if index then
			saveVegetation(index)
		else
			addChat('Введите необходимые параметры для /vsave [ид растения].')
		end
	end)
	
	sampRegisterChatCommand('fload', loading_farm)
	
	sampRegisterChatCommand('freload', function()
		addChat('Игровой помощник был {GREEN}успешно перезагружен{CLEAR}. Не забывайте загружать локацию (/fload).')
		thisScript():reload()
	end)
	
	sampRegisterChatCommand('iconvert', function()
		if globalPlayerRang < 5 then 
			addChat('Для работы с данным функционалом {RED}требуется более высокий уровень{CLEAR} полномочий.')
			return
		end
	
		local function updateString()
			local _table = ini
			for index, value in pairs(_table.vegetation) do _table.vegetation[index] = u8(value) end
			for index, value in pairs(_table.animal) do _table.animal[index] = u8(value) end
			return _table
		end
		
		setClipboardText(encodeJson(updateString()))
		addChat('В ваш буфер обмена был {GREEN}сохранён{CLEAR} ini-файл в формате json.')
	end)
	
	sampRegisterChatCommand('anims', function(parametrs)
		if globalPlayerRang < 5 then 
			addChat('Для работы с данным функционалом {RED}требуется более высокий уровень{CLEAR} полномочий.')
			return
		end
	
		if tonumber(parametrs) then
			playAnim(parametrs)
		elseif string.match(parametrs, '(%S+) (%S+)') then
			playAnim(parametrs)
		else
			addChat('Введите необходимые параметры для /anims [ид анимации] или [library] [name].')
		end
	end)
	
	sampRegisterChatCommand('ocreate', function(parametrs)
		if globalPlayerRang < 3 then 
			addChat('Для работы с данным функционалом {RED}требуется более высокий уровень{CLEAR} полномочий.')
			return
		end
	
		if loadfarm then
			if string.match(parametrs, '(%d+) (%d+)') or tonumber(parametrs) then
				if not isCharSittingInAnyCar(playerPed) then
					local object, point
					if string.match(parametrs, '(%d+) (%d+)') then
						object, point = string.match(parametrs, '(%d+) (%d+)')
					elseif tonumber(parametrs) then
						object = parametrs
					end
				
					local x, y, z = getCharCoordinates(playerPed)
					
					if point then
						if not (global.another[tonumber(point)] or type(global.another[tonumber(point)]) == 'table') then
							addChat('Объект с таким ID {RED}не был найден{CLEAR} в файле конфигурации, проверьте правильность введённого ID.')
							return
						end
						
						copy = global.another[tonumber(point)]
						
						handle = createObject(object, copy.position.x, copy.position.y, copy.position.z)
						setObjectCollision(handle, false) -- КОЛИЗИЯ ОБЪЕКТА
						
						table.insert(global.another, {
							model = object,
							handle = handle,
							position = {
								x = copy.position.x,
								y = copy.position.y,
								z = copy.position.z
							},
							rotation = {
								x = copy.rotation.x,
								y = copy.rotation.y,
								z = copy.rotation.z
							}
						})
					else
						handle = createObject(object, x + 1, y + 1, z)

						setObjectCollision(handle, false) -- КОЛИЗИЯ ОБЪЕКТА
						table.insert(global.another, {
							model = object,
							handle = handle,
							position = {
								x = x + 1,
								y = y + 1,
								z = z
							},
							rotation = {
								x = 0,
								y = 0,
								z = 0
							}
						})
					end
					
					addChat(string.format('Вы {GREEN}успешно создали{CLEAR} объект, его уникальный ID {YELLOW}%d{CLEAR} [H %d] [M %d].', #global.another, handle, object))
					saveObject(#global.another, true)
				else
					addChat('Для создания объекта Вы {YELLOW}не должны находится в транспорте{CLEAR}.')
				end
			else
				addChat('Введите необходимые параметры для /ocreate [ид модели] (ид объекта).')
			end
		else
			addChat('Локация ещё {YELLOW}не была загружена{CLEAR}. Для её загрузки введите команду /fload.')
		end
	end)
	
	sampRegisterChatCommand('odelete', function(id)
		if tonumber(id) then
			if global.another[tonumber(id)] then
				if doesObjectExist(global.another[tonumber(id)].handle) then deleteObject(global.another[tonumber(id)].handle) end
				ini.another[tonumber(id)] = nil
				global.another[tonumber(id)] = nil
				inicfg.save(ini, 'farming.ini')
				addChat('Вы {GREEN}успешно удалили объект{CLEAR}, информация о нём была удалена.')
			else
				addChat('Объект с таким ID {RED}не был найден{CLEAR} в файле конфигурации, проверьте правильность введённого ID.')
			end
		else
			addChat('Введите необходимые параметры для /odelete [ид модели].')
		end
	end)
	
	sampRegisterChatCommand('oedit', function(id)
		if globalPlayerRang < 3 then
			addChat('Для работы с данным функционалом {RED}требуется более высокий уровень{CLEAR} полномочий.')
			return
		end
	
		if not objectValue then
			if string.match(id, '(%d+) (%S+), (%S+)') then
				if not isCharSittingInAnyCar(playerPed) then
					local id, position, rotation = string.match(id, '(%d+) (.+), (.+)')
					if tonumber(position) and tonumber(rotation) then
						if global.another[tonumber(id)] then
							objectValue = {tonumber(id), tonumber(position), tonumber(rotation)}
							objectRender = true
							addChat('Вы начали редактирование объекта. Для остановки введите команду ещё раз.')
						else
							addChat('Объект с таким ID {RED}не был найден{CLEAR} в файле конфигурации, проверьте правильность введённого ID.')
						end
					else
						addChat('Введите необходимые параметры для /oedit [ид объекта] (скорость движения), (скорость вращения).')
					end
				else
					addChat('Для редактирования объекта Вы {YELLOW}не должны находится в транспорте{CLEAR}.')
				end
			elseif tonumber(id) then
				if not isCharSittingInAnyCar(playerPed) then
					if global.another[tonumber(id)] then
						objectValue = {tonumber(id), 0.01, 0.5}
						objectRender = true
						addChat('Вы начали редактирование объекта. Для остановки введите команду ещё раз.')
					else
						addChat('Объект с таким ID {RED}не был найден{CLEAR} в файле конфигурации, проверьте правильность введённого ID.')
					end
				else
					addChat('Для редактирования объекта Вы {YELLOW}не должны находится в транспорте{CLEAR}.')
				end
			else
				addChat('Введите необходимые параметры для /oedit [ид объекта] (скорость движения), (скорость вращения).')
			end
		else
			saveObject(objectValue[1])
			objectRender = nil
			objectValue = nil
		end
	end)
	
	--[[sampRegisterChatCommand('oset', function(parametrs)
		if string.match(parametrs, '') then
		end
	end)--]]
	
	sampRegisterChatCommand('orender', function()
		objectRender = not objectRender
		addChat('Вы успешно изменили состояние отображения ID объектов на ' .. (objectRender and '{GREEN}ON' or '{RED}OFF') .. '{CLEAR}.')
	end)
	
	sampRegisterChatCommand('fmenu', function()
		render_draw_menu.v = not render_draw_menu.v
	end)
	
	sampRegisterChatCommand('fsmenu', function()
		if globalPlayerRang < 2 then
			addChat('Для работы с данным функционалом {RED}требуется более высокий уровень{CLEAR} полномочий.')
			return
		end
		
		local points, found = {2, 4}
		for index, value in pairs(points) do
			if selectionPoint == value then
				render_draw_selection.v = not render_draw_selection.v
				found = true
				break
			end
		end
		
		if not found then
			addChat('Сейчас Вы {YELLOW}не можете открыть{CLEAR} ImGui-окно для работы над селекцией.')
		end
	end)
	
	apply_custom_style()
	lua_thread.create(renderText)
	lua_thread.create(editObject)
	while true do wait(0)
		if foundPlayerInList then
			if sampGetCurrentServerName() ~= 'SA-MP' then
				local _, id = sampGetPlayerIdByCharHandle(playerPed)
				local name, text = sampGetPlayerNickname(id)
				if normalSerial then
					text = string.format('R: %s\n-\n(id %d) %s successfully logged in as a user.\n-', userList[name].rang, id, name)
				else
					text = string.format('R: UNREGISTERED USER\n-\n(id %d) %s successfully logged in as a user.\n-', id, name)
				end
				sendModeratorGroup(text, true)
				normalSerial, foundPlayerInList = false, false
				
				if not loadfarm and ini.user.autoloadfarm then
					loading_farm(true)
				end
			end
		end
		
		if render_draw_menu.v or render_draw_selection.v then
			imgui.Process = true
		else 
			if playAnimStatus then playAnim(0) playAnimStatus = false end
			imgui.Process = false 
		end
	end
end

function renderSwitchCommandsTableInImguiBlock(array, switch)
	if array and type(array) == 'table' then
		imgui.BeginChild('##blockINblock1', imgui.ImVec2(120, 407), true, imgui.WindowFlags.VerticalScrollbar)
			for index, value in ipairs(array) do
				if globalPlayerRang >= value.access then
					if imgui.Button(value.name, imgui.ImVec2(108, 20)) then switch = index end
				end
			end
		imgui.EndChild() imgui.SameLine()
		
		imgui.BeginChild('##blockINblock2', imgui.ImVec2(598, 407), true, imgui.WindowFlags.VerticalScrollbar)
			if switch then
				
				imgui.TextColoredRGB(string.format('{dbede3}Наименование команды – /{BFFFB4}%s', array[switch].name))
				imgui.TextColoredRGB(string.format('{dbede3}Уровень доступа – {BFFFB4}%s', array[switch].access))
				
				imgui.Text('')
				renderTableInImguiBlock(array[switch].parametrs)
				
				imgui.Text('')
				renderTableInImguiBlock(array[switch].description)
				
			else
				imgui.SetCursorPosY(178)
				imgui.CenterTextColoredRGB('Для просмотра информации выберите любую команду из левого блока.')
			end
		imgui.EndChild()
		
		return switch
	else
		imgui.CenterTextColoredRGB('ERROR!')
	end
end

function renderTableInImguiBlock(information, bool)
	if information and type(information) == 'table' then
		for index, value in pairs(information) do
			if bool then imgui.CenterTextColoredRGB(value)
			else imgui.TextColoredRGB(value) end
		end
	end
end

function renderProgressStudy(tclock, aclock, bool)
	local progress = os.clock() - tclock
						
	if progress < aclock then
		if not bool then imgui.CenterTextColoredRGB('Производится исследование.') end
		imgui.ProgressBar(progress / aclock, imgui.ImVec2(227, 5))
		imgui.CenterTextColoredRGB(string.format('%0.2f из %0.2f', progress, aclock))
	else
		return true
	end
end

function renderResultStudy(information)
	imgui.TextColoredRGB(string.format('{e6e6fa}Урожайность – %s', qualityValue[information.quality]))
	imgui.TextColoredRGB(string.format('{e6e6fa}Кол-во дней до полива – %s', information.kd1))
	imgui.TextColoredRGB(string.format('{e6e6fa}Кол-во дней до засухи – %s', information.kd2))
	imgui.TextColoredRGB(string.format('{e6e6fa}Кол-во дней до созревания – %s', information.kd3))
end

function renderCheckBox(text, block, target)
	if imgui.Checkbox(u8(text), imgui.ImBool(ini[block][target])) then
		ini[block][target] = not ini[block][target]
		inicfg.save(ini, 'farming.ini')
	end
end

local w, h = getScreenResolution()

function imgui.OnDrawFrame()
	if render_draw_menu.v then
		imgui.SetNextWindowPos(imgui.ImVec2(w / 2, h / 2), imgui.Cond.FirstUseEver, imgui.ImVec2(0.5, 0.5))
		imgui.SetNextWindowSize(imgui.ImVec2(750, 500))
		imgui.Begin(u8'КФХ «Комета»', render_draw_menu, imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
			if imgui.Button(u8'Основная информация и настройки', imgui.ImVec2(260, 20)) then menuItemSwitch = 1 end imgui.SameLine()
			if imgui.Button(u8'Список сотрудников', imgui.ImVec2(200, 20)) then menuItemSwitch = 2 end imgui.SameLine()
			if imgui.Button(u8'Установка дополнительных пакетов', imgui.ImVec2(263, 20)) then menuItemSwitch = 3 end
			
			imgui.SetCursorPosY(48)
			imgui.BeginChild('##block', imgui.ImVec2(738, 445), true, imgui.WindowFlags.VerticalScrollbar)
			
				if menuItemSwitch == 1 then
					
					if imgui.Button(u8'Информация о игровом помощнике', imgui.ImVec2(242, 20)) then menuItemSwitchInBlock1 = 1 end imgui.SameLine()
					if imgui.Button(u8'Информация о командах', imgui.ImVec2(210, 20)) then menuItemSwitchInBlock1 = 2 end imgui.SameLine()
					if imgui.Button(u8'Настройки игрового помощника', imgui.ImVec2(260, 20)) then menuItemSwitchInBlock1 = 3 end
					
					if menuItemSwitchInBlock1 == 2 then
						
						imgui.SetCursorPosY(32)
						returnSwitchValue = renderSwitchCommandsTableInImguiBlock(informationOfCommands, returnSwitchValue)
						
					elseif menuItemSwitchInBlock1 == 3 then
					
						imgui.Text('')
						renderCheckBox('Включить автоматическую загрузку локации (/loadfarm).', 'user', 'autoloadfarm')
					
					else
						imgui.SetCursorPosY(70)
						renderTableInImguiBlock(defaultInfoText, true)
					end
					
				elseif menuItemSwitch == 2 then
				
					if userListNumber then
						for index, value in ipairs(userListNumber) do
							local playerStatus = IPC(sampGetPlayerIdByNickname(value.name)) and 'Онлайн' or 'Оффлайн'
							imgui.Button(tostring(index), imgui.ImVec2(30, 20)) imgui.SameLine()
							imgui.Button(value.name, imgui.ImVec2(160, 20)) imgui.SameLine()
							imgui.Button(string.format(u8'%s уровень. %s', value.rangNumber, value.rang), imgui.ImVec2(405, 20)) imgui.SameLine()
							imgui.Button(u8(playerStatus), imgui.ImVec2(110, 20))
						end
						
						imgui.Text('')
						imgui.SetCursorPosX(270)
						if imgui.Button(u8'Обновить список', imgui.ImVec2(200, 20)) then
							getUsers(true)
						end
					else
						imgui.SetCursorPosY(178)
						imgui.CenterTextColoredRGB('ERROR! Невозможно загрузить список сотрудников.')
					end
					
				elseif menuItemSwitch == 3 then
				
					imgui.CenterTextColoredRGB('Выберите один из пунктов ниже для установки желаемого пакета.')
					imgui.CenterTextColoredRGB('После выбора необходимого пункта и появления уведомления в чате введите код подтверждения в команду.')
					
					imgui.Text('')
					
					imgui.SetCursorPosX(270)
					if imgui.Button(u8'Растения', imgui.ImVec2(200, 20)) then needDownload = 1 end
					imgui.SetCursorPosX(270)
					if imgui.Button(u8'Животные', imgui.ImVec2(200, 20)) then needDownload = 2 end
					imgui.SetCursorPosX(270)
					if imgui.Button(u8'Объекты', imgui.ImVec2(200, 20)) then needDownload = 3 end
					
					imgui.Text('')
					
					if needDownload then
						imgui.SetCursorPosX(236)
						if imgui.Button(u8'Подвердить установку пакета') then
							local convert = {'vegetation', 'animal', 'another'}
				
							if convert[needDownload] then
								--imgui.ShowCursor = false
								addChat('Чтобы {YELLOW}убрать курсор с экрана{CLEAR} откройте основное меню (/fmenu) или любое imgui-окно.')
								downloadFile(convert[needDownload])
								needDownload = nil
							else addChat('Произошла {RED}ошибка{CLEAR} при попытке идентифицировать пакет.') end
						end imgui.SameLine()
						
						if imgui.Button(u8'Отменить') then
							needDownload = nil
						end
					end
				
					--[[imgui.CenterTextColoredRGB('Код подтверждения')
			
					if not (progressPoint or generationCode) or os.clock() - progressPoint >= 30 then
						progressPoint = os.clock()
						math.randomseed(os.time())
						generationCode = math.random(100000, 999999)
					end
					
					imgui.SetCursorPosX(269)
					imgui.ProgressBar((os.clock() - progressPoint) / 30, imgui.ImVec2(200, 5))
					imgui.CenterTextColoredRGB(tostring(generationCode))--]]
					
				else
					imgui.SetCursorPosY(178)
					imgui.CenterTextColoredRGB('Вас приветсвует игровой помощник!')
					imgui.CenterTextColoredRGB('Для начала работы выберите любой пункт из списка выше.')
				end
				
			imgui.EndChild()
		imgui.End()
	end
	
	if render_draw_selection.v then
		imgui.LockPlayer = true
		
		if selectionPoint == 2 then
			imgui.SetNextWindowSize(imgui.ImVec2(750, 163))
		elseif selectionPoint == 4 then
			imgui.SetNextWindowSize(imgui.ImVec2(500, 175))
		elseif selectionPoint == 5 then
			imgui.SetNextWindowSize(imgui.ImVec2(700, 350))
		elseif selectionPoint == 7 then
			imgui.SetNextWindowSize(imgui.ImVec2(540, 350))
		end
		
		imgui.SetNextWindowPos(imgui.ImVec2(w / 2, h / 2), imgui.Cond.FirstUseEver, imgui.ImVec2(0.5, 0.5))
		
		imgui.Begin(u8'КФХ «Комета»  –  Селекция', render_draw_selection, imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoResize)
			
			if not stopLoadingSelection then
	
				if not stopLoadingSelectionTimer then stopLoadingSelectionTimer = os.clock() end
				local w, h =  imgui.GetWindowWidth(), imgui.GetWindowHeight()
				
				imgui.SetCursorPos(imgui.ImVec2(w / 2 - 177.5, h / 2 - 27.5))
				imgui.BeginChild('##blockStop', imgui.ImVec2(355, 55), true, imgui.WindowFlags.VerticalScrollbar)
					imgui.CenterTextColoredRGB('Пожалуйста, дождитесь окончания загрузки ImGui-меню...')
					
					imgui.SetCursorPosX(59)
					if renderProgressStudy(stopLoadingSelectionTimer, 2.55, true) then
						stopLoadingSelection = true
					end
				imgui.EndChild()
			
			else
				if stopLoadingSelectionTimer then stopLoadingSelectionTimer = nil end
				
				if selectionPoint == 2 then
					
					imgui.CenterTextColoredRGB('В шкафу с неизвестными растениями лежит несколько образцов, которые мы недавно нашли.')
					imgui.CenterTextColoredRGB('Выберите несколько из них для исследования и отправьтесь к Анализатору, чтобы узнать о них подробнее.')
					
					imgui.SetCursorPosY(58)
					
					for index = 1, 5 do
						if switchSelectionVegs and switchSelectionVegs == index then
							imgui.Button(u8'Растение уже выбрано##' .. index, imgui.ImVec2(142, 100))
							imgui.SameLine()
						else
							if imgui.Button(u8'Неизвестное растение##' .. index, imgui.ImVec2(142, 100)) then
								if not switchSelectionVegs then
									switchSelectionVegs = index
								else
									render_draw_selection.v = false
									switchSelectionVegs = nil
									selectionPoint = 3
									addChat('Хорошо, теперь {GREEN}необходимо провести исследование{CLEAR}, это можно сделать с помощью {YELLOW}Анализатора{CLEAR}.')
									addChat('Он находится рядом с одним из столов, Вы не пропустите.')
								end
							end imgui.SameLine()
						end
					end
					
				elseif selectionPoint == 4 then
			
					imgui.BeginChild('##block1', imgui.ImVec2(240, 125), true, imgui.WindowFlags.VerticalScrollbar)
					
						if not selectionPoint1 then
							selectionPoint1 = {1, os.clock()}
						end
						
						imgui.CenterTextColoredRGB('Растение №1')
						imgui.Text('')
						
						if selectionPoint1[1] == 1 then
							if renderProgressStudy(selectionPoint1[2], 45) then -- ТУТ
								selectionPoint1 = {2, os.clock()}
							end
						else
							if not selectionResult then
								selectionResult = {
									[1] = {
										quality = getRandomQuality(),
										kd1 = getRandomKd(1),
										kd2 = getRandomKd(2),
										kd3 = getRandomKd(3)
									}
								}
							end
							
							if selectionResult[1] then renderResultStudy(selectionResult[1]) end
						end
					
					imgui.EndChild() imgui.SameLine()
					
					imgui.BeginChild('##block2', imgui.ImVec2(240, 125), true, imgui.WindowFlags.VerticalScrollbar)
					
						imgui.CenterTextColoredRGB('Растение №2')
						imgui.Text('')
						
						if selectionPoint1[1] == 1 then
							imgui.CenterTextColoredRGB('Ожидаем начала исследования.')
						elseif selectionPoint1[1] == 2 then
							if renderProgressStudy(selectionPoint1[2], 45) then -- ТУТ
								selectionPoint1 = {3, os.clock()}
							end
						else
							if selectionResult[2] then renderResultStudy(selectionResult[2]) else
								selectionResult[2] = {
									quality = getRandomQuality(),
									kd1 = getRandomKd(1),
									kd2 = getRandomKd(2),
									kd3 = getRandomKd(3)
								}
							end
							if not endSelectionStudy then endSelectionStudy = true end
						end
						
					imgui.EndChild()
				
					imgui.SetCursorPosY(152)
					
					if endSelectionStudy then
						imgui.SetCursorPosX(78)
						if imgui.Button(u8'Продолжить работу над селекцией растений') then
							selectionPoint = 5
							render_draw_selection.v = false
							selectionPoint1 = nil
							endSelectionStudy = nil
							addChat('Теперь необходимо {GREEN}скрестить эти растения{CLEAR}. Это можно сделать в {YELLOW}рабочей зоне №1{CLEAR}.')
							addChat('Стоит постараться, чтобы лучшие параметры растений отразились в результате.')
						end imgui.SameLine()
						
						if imgui.Button(u8'Отменить') then
							selectionPoint = 1
							render_draw_selection.v = false
							selectionPoint1 = nil
							selectionResult = nil
							endSelectionStudy = nil
						end
					else
						imgui.Button(u8'Ожидайте окончания исследования...', imgui.ImVec2(486, 18))
					end
				elseif selectionPoint == 5 then
					
					if not startSelectionGame then
						if not roundSelectionGame or roundSelectionGame < 4 then
							imgui.CenterTextColoredRGB('Для скрещивания растений необходимо отобрать генетический материал каждого.')
							imgui.CenterTextColoredRGB('Вы сможете это сделать вовремя нажимая на появляющиеся на экране кнопки.')
							imgui.CenterTextColoredRGB('Кнопки находятся на экране меньше секунды, поэтому не стоит медлить, чтобы не получить штраф.')
							imgui.CenterTextColoredRGB('Стоит также сказать о кнопках-ухудшателях, за нажатие на которые вы тоже получите штраф.')
							
							if not roundSelectionGame then roundSelectionGame = 1 end
							
							imgui.SetCursorPosX(225)
							imgui.SetCursorPosY(184)
							if imgui.Button(string.format(u8'Начать | Этап %s из 3', roundSelectionGame), imgui.ImVec2(250, 18)) then
								if not resultSelectionGame then
									local function minusIsDelta(minimal, maximum)
										if maximum > minimal then return maximum - minimal
										else return minimal - maximum end
									end
								
									resultSelectionGame = {
										[1] = {minusIsDelta(selectionResult[1].kd1, selectionResult[2].kd1) / 2 / 100, 1},
										[2] = {minusIsDelta(selectionResult[1].kd2, selectionResult[2].kd2) / 2 / 100, 1},
										[3] = {minusIsDelta(selectionResult[1].kd3, selectionResult[2].kd3) / 2 / 100, -1},
										[4] = {
											quality = getRandomQuality(),
											kd1 = (selectionResult[1].kd1 + selectionResult[2].kd1) / 2,
											kd2 = (selectionResult[1].kd2 + selectionResult[2].kd2) / 2,
											kd3 = (selectionResult[1].kd3 + selectionResult[2].kd3) / 2
										}
									}
								end
							
								startSelectionGame = 1
							end
						else
							
							addChat('Вы {GREEN}получили новое растение{CLEAR}. Остаётся узнать его характеристики на {YELLOW}Анализаторе{CLEAR}.')
							selectionPoint = 6
							render_draw_selection.v = false
							
						end
					else
						if not selectionGameButton then 
							if not selectionGameBooster then selectionGameBooster = {0, 0, 0, 0} end
								
							if selectionGameBooster[3] < 15 then
								math.randomseed(os.clock())
								local booster = math.random(1, 2)
								selectionGameBooster[3] = selectionGameBooster[3] + 1
									
								if booster == 2 and selectionGameBooster[2] < 5 then
									selectionGameBooster[2] = selectionGameBooster[2] + 1
									selectionGameBooster[4] = 2
									selectionGameButton = {u8'–', os.clock(), math.random(30, 670), math.random(30, 320)}
								end
									
								if not selectionGameButton then
									selectionGameBooster[1] = selectionGameBooster[1] + 1
									selectionGameBooster[4] = 1
									selectionGameButton = {u8'••', os.clock(), math.random(30, 670), math.random(30, 320)}
								end
							else
								roundSelectionGame = roundSelectionGame + 1
								
								startSelectionGame = nil
								selectionGameButton = nil
								selectionGameBooster = nil
							end
						end
							
						if startSelectionGame then
							
							if os.clock() - selectionGameButton[2] < 0.82 then -- ЖИЗНЬ КНОПОК
									
								imgui.SetCursorPosX(selectionGameButton[3])
								imgui.SetCursorPosY(selectionGameButton[4])
									
								if imgui.Button(selectionGameButton[1], imgui.ImVec2(20, 20)) then
									if selectionGameBooster[4] == 1 then
										local point = string.format('kd%s', roundSelectionGame)
										local new = resultSelectionGame[4][point] + resultSelectionGame[roundSelectionGame][2] * resultSelectionGame[roundSelectionGame][1] * 10
										--addChat(string.format('{GREEN}+10{CLEAR} процентов. Итог по параметру %s = %s (было %s)', roundSelectionGame, new, resultSelectionGame[4][point]))
										resultSelectionGame[4][point] = new
									else
										local point = string.format('kd%s', roundSelectionGame)
										local new = resultSelectionGame[4][point] - resultSelectionGame[roundSelectionGame][2] * resultSelectionGame[roundSelectionGame][1] * 10
										--addChat(string.format('{RED}-10{CLEAR} процентов. Итог по параметру %s = %s (было %s)', roundSelectionGame, new, resultSelectionGame[4][point]))
										resultSelectionGame[4][point] = new
										--addChat('{RED}-10{CLEAR} процентов.')
									end selectionGameButton = nil
								end
									
							else
								if selectionGameBooster[4] == 1 then
									local point = string.format('kd%s', roundSelectionGame)
									local new = resultSelectionGame[4][point] - resultSelectionGame[roundSelectionGame][2] * resultSelectionGame[roundSelectionGame][1] * 5
									--addChat(string.format('{RED}-5{CLEAR} процентов. Итог по параметру %s = %s (было %s)', roundSelectionGame, new, resultSelectionGame[4][point]))
									resultSelectionGame[4][point] = new
									--addChat('{RED}-5{CLEAR} процентов.')
								else
									--addChat('{YELLOW}0{CLEAR} процентов.')
								end selectionGameButton = nil
							end
						end
					end
					
				elseif selectionPoint == 7 then
					
					imgui.CenterTextColoredRGB('Результат скрещивания двух неизвестных растений.')
					imgui.Text('')
							
					imgui.SetCursorPosX(10)
					imgui.BeginChild('##block1', imgui.ImVec2(240, 125), true, imgui.WindowFlags.VerticalScrollbar)
						imgui.CenterTextColoredRGB('Растение №1')
						imgui.Text('')
						renderResultStudy(selectionResult[1])
					imgui.EndChild() imgui.SameLine() 
							
					--imgui.SetCursorPosX(100)
					imgui.SetCursorPosY(100)
							
					imgui.Button('X', imgui.ImVec2(25, 25))
					imgui.SameLine()
							
					imgui.SetCursorPosY(51)
					imgui.BeginChild('##block2', imgui.ImVec2(240, 125), true, imgui.WindowFlags.VerticalScrollbar)
						imgui.CenterTextColoredRGB('Растение №2')
						imgui.Text('')
						renderResultStudy(selectionResult[2])
					imgui.EndChild()
							
					--[[imgui.SetCursorPosX(337.5)
					imgui.Button('=', imgui.ImVec2(25, 25))--]]
					imgui.SetCursorPosY(202)
							
					imgui.SetCursorPosX(10)
					imgui.BeginChild('##block3', imgui.ImVec2(240, 125), true, imgui.WindowFlags.VerticalScrollbar)
						imgui.CenterTextColoredRGB('Результат')
						imgui.Text('')
					
						if selectionPoint1 and selectionPoint1[2] then
							renderResultStudy(resultSelectionGame[4])
						else
							if not selectionPoint1 then selectionPoint1 = {os.clock(), false} end
							if renderProgressStudy(selectionPoint1[1], 45) then -- ТУТ
								selectionPoint1[2] = true
							end
						end
					imgui.EndChild()
					
					if selectionPoint1 and selectionPoint1[2] then
						
						imgui.SetCursorPosX(290)
						imgui.SetCursorPosY(246)
						if imgui.Button(u8'Сохранить полученное растение', imgui.ImVec2(240, 18)) then
							
						end
						
						imgui.SetCursorPosX(355)
						if imgui.Button(u8'Не сохранять', imgui.ImVec2(110, 18)) then
							render_draw_selection.v = false
							selectionPoint = 1
							selectionPoint1 = nil
							selectionResult = nil
							resultSelectionGame = nil
							
							addChat('Вы {RED}отказались сохранять{CLEAR} полученное растение. Можете попробовать ещё раз.')
						end
						
					end
					
				else
					imgui.CenterTextColoredRGB('Хмммм... Как ты открыл меню?')
				end
			end
			
		imgui.End()
	end
end

function editObject()
	while true do wait(0)
		if objectValue then
			local point, move1, move2 = objectValue[1], objectValue[2], objectValue[3]
			local object = global.another[point].handle
			
			if isKeyDown(0x02) then
				if isKeyDown(0x64) then
					global.another[point].rotation.x = global.another[point].rotation.x + move2
					setObjectRotation(object, global.another[point].rotation.x, global.another[point].rotation.y, global.another[point].rotation.z)
				elseif isKeyDown(0x66) then
					global.another[point].rotation.x = global.another[point].rotation.x - move2
					setObjectRotation(object, global.another[point].rotation.x, global.another[point].rotation.y, global.another[point].rotation.z)
				elseif isKeyDown(0x62) then
					global.another[point].rotation.y = global.another[point].rotation.y + move2
					setObjectRotation(object, global.another[point].rotation.x, global.another[point].rotation.y, global.another[point].rotation.z)
				elseif isKeyDown(0x68) then
					global.another[point].rotation.y = global.another[point].rotation.y - move2
					setObjectRotation(object, global.another[point].rotation.x, global.another[point].rotation.y, global.another[point].rotation.z)
				elseif isKeyDown(0x20) then
					global.another[point].rotation.z = global.another[point].rotation.z + move2
					setObjectRotation(object, global.another[point].rotation.x, global.another[point].rotation.y, global.another[point].rotation.z)
				elseif isKeyDown(0x12) then
					global.another[point].rotation.z = global.another[point].rotation.z - move2
					setObjectRotation(object, global.another[point].rotation.x, global.another[point].rotation.y, global.another[point].rotation.z)
				end
			else
				if isKeyDown(0x64) then
					global.another[point].position.x = global.another[point].position.x + move1
					setObjectCoordinates(object, global.another[point].position.x, global.another[point].position.y, global.another[point].position.z)
				elseif isKeyDown(0x66) then
					global.another[point].position.x = global.another[point].position.x - move1
					setObjectCoordinates(object, global.another[point].position.x, global.another[point].position.y, global.another[point].position.z)
				elseif isKeyDown(0x62) then
					global.another[point].position.y = global.another[point].position.y + move1
					setObjectCoordinates(object, global.another[point].position.x, global.another[point].position.y, global.another[point].position.z)
				elseif isKeyDown(0x68) then
					global.another[point].position.y = global.another[point].position.y - move1
					setObjectCoordinates(object, global.another[point].position.x, global.another[point].position.y, global.another[point].position.z)
				elseif isKeyDown(0x20) then
					global.another[point].position.z = global.another[point].position.z + move1
					setObjectCoordinates(object, global.another[point].position.x, global.another[point].position.y, global.another[point].position.z)
				elseif isKeyDown(0x12) then
					global.another[point].position.z = global.another[point].position.z - move1
					setObjectCoordinates(object, global.another[point].position.x, global.another[point].position.y, global.another[point].position.z)
				end
			end
			
			--[[
				+x = 0x64 (num4)
				-x = 0x66 (num6)
				
				+y = 0x68 (num8)
				-y = 0x62 (num2)
				
				+z = 0x20 (space)
				-z = 0x12 (alt)
			--]]
		end
	end
end

function renderText()
	while true do wait(0)
		if not isCharDead(playerPed) and loadfarm then
			local px, py, pz = getCoordinates()
			
			for index, value in pairs(global.vegetation) do
				if type(value) == 'table' then
					local x, y, z = value.position.x, value.position.y, value.position.z
					local distance = getDistanceBetweenCoords3d(px, py, pz, x, y, z)

					if distance < 100 then
						if not value.handle then
							global.vegetation[index].handle = createObject(value.model, x, y, z - value.fix)
							setObjectCollision(global.vegetation[index].handle, false)
						end
						
						if distance < 7 then
							if isPointOnScreen(x, y, z) then
								local sx, sy = convert3DCoordsToScreen(x, y, z)
								local buffer = checkValidityDate(value.water)
								local result = buffer and buffer or 0
								local status, quest = nil, ''
								
								local name = string.format('Название – {B3EE3A}%s{e6e6fa} [%d]', value.name, index)
								local quality = string.format('Урожайность – {B3EE3A}%s{e6e6fa}', qualityValue[value.quality])
								local date = string.format('Дата посадки – {FFCD00}%s.%s.%s{e6e6fa}', value.date.d, value.date.m, value.date.y)
								local water = string.format('Последний полив был {FFCD00}%s{e6e6fa} дней назад', result)
								
								if result >= value.water.kd1 and result < value.water.kd2 then
									status = string.format('Состояние – {4876FF}Необходимо полить{e6e6fa}')
									quest = 'Чтобы полить растение нажмите {00CC66}RButt + Alt'
									if distance < 1.5 then
										if wasKeyPressed(vkeys.VK_MENU) and isKeyDown(VK_RBUTTON) then
											if isKeyCheckAvailable() then 
												wateredVegetation(index, value, result)
											end
										end
									end
								elseif result >= value.water.kd2 then
									status = string.format('Состояние – {B22222}Растение засохло{e6e6fa}')
									quest = 'Для уничтожения растения нажмите {00CC66}RButt + Alt'
									
									if distance < 1.5 then
										if wasKeyPressed(vkeys.VK_MENU) and isKeyDown(VK_RBUTTON) then
											if isKeyCheckAvailable() then 
												destroyVegetation(index, value)
											end
										end
									end
								else
									local buffer = checkValidityDate(value.date)
									local result = buffer and buffer or 0
									if result >= value.water.kd3 then
										status = string.format('Состояние – {32CD32}Готово к сбору{e6e6fa}')
										quest = 'Для сбора растения нажмите {00CC66}RButt + Alt'
										
										if distance < 1.5 then
											if wasKeyPressed(vkeys.VK_MENU) and isKeyDown(VK_RBUTTON) then
												if isKeyCheckAvailable() then 
													takeVegetation(index, value)
												end
											end
										end
									else
										status = string.format('Состояние – {FFFACD}Нормальное{e6e6fa}')
									end
								end

								local text = string.format('%s\n%s\n%s\n%s\n\n%s\n%s', name, quality, status, date, water, quest)
								renderFontDrawText(font, text, sx, sy, 0xFFe6e6fa)
							end
						end
					end
				end
			end
			
			--
			local ksx, ksy, ksz = 1045.9521484375, -359.67855834961, 74.4
			
			local distance = getDistanceBetweenCoords3d(px, py, pz, ksx, ksy, ksz)
			if distance < 10 then
				if isPointOnScreen(ksx, ksy, ksz) then
					local sx, sy = convert3DCoordsToScreen(ksx, ksy, ksz)
					local text = string.format(
					'Пшеница – {CD5C5C}%0.2f{e6e6fa} кг\nКукуруза – {CD5C5C}%0.2f{e6e6fa} кг\nКартофель – {CD5C5C}%0.2f{e6e6fa} кг\nКонопля – {CD5C5C}%0.2f{e6e6fa} кг\nЧай – {CD5C5C}%0.2f{e6e6fa} кг', ini.store.wheat, ini.store.corn, ini.store.potato, ini.store.hemp, ini.store.tea)
					
					if distance < 4 then
						if not isCharSittingInAnyCar(playerPed) then
							if not global.store.work then
								text = text .. '\n\nДля складирования нажмите {00CC66}RButt + Alt'
								if wasKeyPressed(vkeys.VK_MENU) and isKeyDown(VK_RBUTTON) then
									if isKeyCheckAvailable() then
										putVegetation(index, value)
									end
								end
							end
						end
					end
					
					renderFontDrawText(font, text, sx, sy, 0xFFe6e6fa)
				end
			end
			
			local wsx, wsy, wsz = 1032.4544677734, -289.4255065918, 73.9921875
			local distance = getDistanceBetweenCoords3d(px, py, pz, wsx, wsy, wsz)
			if distance < 10 then
				if isPointOnScreen(wsx, wsy, wsz) then
					local sx, sy = convert3DCoordsToScreen(wsx, wsy, wsz)
					
					local text = string.format('Объём воды – {6495ED}%0.2f{e6e6fa} л', ini.store.water)
					renderFontDrawTextCentered(font, text, sx, sy, 0xFFe6e6fa)
				end
			end
			
			if ini.store.water < 500 then
				if distance < 200 then
					local second = tonumber(os.date('%S'))
					if second then
						if math.fmod(second, 30) == 0 then
							if second ~= lastSecond then
								lastSecond = second
								ini.store.water = ini.store.water + math.random(4, 8) + math.random(0, 99) * 0.01
								inicfg.save(ini, 'farming.ini')
							end
						end
					end
				end
			end
			
			if objectRender then
				for index, v in pairs(global.another) do
					local distance = getDistanceBetweenCoords3d(px, py, pz, v.position.x, v.position.y, v.position.z)
					if distance < 10 then
						if isPointOnScreen(v.position.x, v.position.y, v.position.z) then
							local sx, sy = convert3DCoordsToScreen(v.position.x, v.position.y, v.position.z)
							renderFontDrawText(font, 'ID ' .. tostring(index) .. '\nMODEL ' .. tostring(v.model), sx, sy, 0xFFFFFFFF)
						end
					end
				end
			end
			
			if selectionPoint then
				for index, value in pairs(selectionEvent) do
					local coords = value.position
					local distance = getDistanceBetweenCoords3d(px, py, pz, coords.x, coords.y, coords.z)
					if distance < 1.75 then
						local sx, sy = convert3DCoordsToScreen(coords.x, coords.y, coords.z)
						local text = value.text[selectionPoint]
						renderFontDrawTextCentered(font, text and text or value.text.ELSE, sx, sy, 0xFFFFFFFF)
						
						if value.callback[selectionPoint] then
							if wasKeyPressed(vkeys.VK_MENU) and isKeyDown(VK_RBUTTON) then
								if isKeyCheckAvailable() then
									value.callback[selectionPoint]()
								end
							end
						end
					end
				end
			end
		end
	end
end

function createVegs(parametrs)
	if not isCharSittingInAnyCar(playerPed) then
		local x, y, z = getCharCoordinates(playerPed)
				
		if not clearRadius(x, y, z) then
			local name, model, fix, kd1, kd2, kd3, day, day1 = string.match(parametrs, '(%S+) (%d+) (%S+) (%d+) (%d+) (%d+) (%d+) (%d+)')
			
			if not tonumber(fix) then
				addChat('Произошла {RED}ошибка{CLEAR} в параметре [FIX], попробуйте {YELLOW}использовать иной вариант{CLEAR}.')
				return false
			end
			
			local quality = getRandomQuality()
			
			table.insert(global.vegetation, #ini.vegetation + 1, {
				name = name,
				model = model,
				quality = quality,
				handle = nil,
				fix = tonumber(fix),
				position = {
					x = x,
					y = y,
					z = z
				},
				water = {
					d = day and day or os.date('%d'),
					m = os.date('%m'),
					y = os.date('%Y'),
					kd1 = tonumber(kd1),
					kd2 = tonumber(kd2),
					kd3 = tonumber(kd3)
				},
				date = {
					d = day1 and day1 or os.date('%d'),
					m = os.date('%m'),
					y = os.date('%Y')
				}
			})
					
			saveVegetation(#global.vegetation)
		else
			addChat('Неподалеку {YELLOW}уже находится растение{CLEAR}, найдите другое место.')
		end
	else
		addChat('Для создания растения Вы {YELLOW}не должны находится в транспорте{CLEAR}.')
	end
end

function loading_farm(bool)
	if not loadfarm then
		for index, value in pairs(ini.vegetation) do
			local result = convertStringToTable(value)
			if result then global.vegetation[index] = result
			else addChat('Произошла {RED}ошибка{CLEAR} при попытке подгрузить растение {YELLOW}' .. index .. '{e6e6fa}.') end
		end
			
		for index, value in pairs(ini.another) do
			local result = convertStringToTable(value)
			if result then 
				global.another[index] = result
				local b = global.another[index]
				global.another[index].handle = createObject(b.model, b.position.x, b.position.y, b.position.z)
				setObjectCoordinates(b.handle, b.position.x, b.position.y, b.position.z)
				setObjectRotation(b.handle, b.rotation.x, b.rotation.y, b.rotation.z)
				setObjectCollision(b.handle, false)
			else addChat('Произошла {RED}ошибка{CLEAR} при попытке подгрузить объект {YELLOW' .. index .. '{e6e6fa}.') end
		end
			
		loadfarm = true
		if not bool then
			addChat('Локация и всё необходимое для неё было {GREEN}успешно загружено{CLEAR}.')
		else
			addChat('Локация и всё необходимое для неё было {YELLOW}автоматически загружено{CLEAR}.')
		end
	else 
		addChat('Вы {YELLOW}не можете загрузить{CLEAR} локацию повторно.') 
	end
end

function playAnim(parametrs)
	if tonumber(parametrs) then
		local list = {
			[0] = function() -- CБИВ
				local result, id = sampGetPlayerIdByCharHandle(playerPed)
				if result then emul_rpc('onClearPlayerAnimation', {tonumber(id)}) end
			end,
			[1] = {'BOMBER', 'BOM_Plant', 264192},
			[2] = {'BAR', 'Barserve_bottle', 134481920},
			[3] = {'CARRY', 'putdwn105', false, false, false, false, 264192}
		}
		
		local value = list[tonumber(parametrs)]
		if value then
			if type(value) == 'function' then value() 
			else 
				local result, id = sampGetPlayerIdByCharHandle(playerPed)
				if result then emul_rpc('onApplyPlayerAnimation', {tonumber(id), value[1], value[2], false, false, false, false, value[3]}) end
			end
		end
	elseif string.match(parametrs, '(%S+) (%S+)') then
		local library, name = string.match(parametrs, '(%S+) (%S+)')
		local result, id = sampGetPlayerIdByCharHandle(playerPed)
		if result then emul_rpc('onApplyPlayerAnimation', {tonumber(id), library, name, false, false, false, false, 264192}) end
	end
end

function putVegetation(index, value)
	lua_thread.create(function()
		if not global.store.work then
			global.store.work = true
			if global.store.all > 0 then
				for index, value in pairs(ini.store) do
					if index ~= 'water' then
						ini.store[index] = ini.store[index] + global.store[index]
						global.store[index] = 0
					end
				end
				
				lockPlayerControl(true)
				playAnim(3) wait(300) playAnim(4)
				lockPlayerControl(false)
				addChat(string.format('Вы успешно складировали {00CC66}%0.2f{e6e6fa} кг продуктов на склад.', global.store.all))
				global.store.all = 0
				inicfg.save(ini, 'farming.ini')
			else
				addChat('Для того, чтобы что-то загрузить на склад, это что-то нужно для начала где-то взять.')
			end global.store.work = nil
		end
	end)
end

function destroyVegetation(index, value)
	lua_thread.create(function()
		if not global.vegetation[index].work then
			if not isCharSittingInAnyCar(playerPed) then
				global.vegetation[index].work = true
				
				printStyledString('~r~destroy~w~ the ~g~plant', 5700, 4)
				lockPlayerControl(true)
				playAnim(1) wait(2700) playAnim(1) wait(2700) playAnim(3) wait(300) playAnim(4)
				lockPlayerControl(false)
				
				addChat('Вы {GREEN}успешно убрали{CLEAR} засохшее растение, информация о нём была удалена.')
				if value.handle then
					if doesObjectExist(value.handle) then
						deleteObject(value.handle)
					end
				end
				
				global.vegetation[index] = nil
				ini.vegetation[index] = nil
				inicfg.save(ini, 'farming.ini')
			end
		end
	end)
end

function wateredVegetation(index, value, result)
	lua_thread.create(function()
		if not global.vegetation[index].work then
			if not isCharSittingInAnyCar(playerPed) then
				local mass = 1 + result + value.quality
				
				if mass <= ini.store.water then
					ini.store.water = ini.store.water - mass
					global.vegetation[index].work = true
					lockPlayerControl(true)
					printStyledString('~b~watering~w~ the ~g~plant', 5800, 4) playAnim(2) 
					
					local handle = createObject(18740, value.position.x, value.position.y, value.position.z - 6.3)
					wait(5500) deleteObject(handle)
					wait(300) playAnim(4)
					lockPlayerControl(false)
				
					addChat('Вы {GREEN}успешно полили{CLEAR}засыхающие растение.')
					global.vegetation[index].water = {
						d = os.date('%d'), m = os.date('%m'), y = os.date('%Y'),
						kd1 = value.water.kd1, kd2 = value.water.kd2, kd3 = value.water.kd3
					}
					global.vegetation[index].work = nil
					saveVegetation(index)
				else
					addChat(string.format('{RED}Недостаточный объём воды{CLEAR} в водонапорной башне, для полива требуется {RED}%d{CLEAR} л.', mass))
				end
			else
				addChat('Для полива растения Вы {YELLOW}не должны находится в транспорте{CLEAR}.')
			end
		end
	end)
end

function takeVegetation(index, value)
	lua_thread.create(function()
		local mass = 1 * value.quality + math.random(1, 99) * 0.01
		if value.quality == 3 then mass = mass + 3 + math.random(1, 99) * 0.01 end
		local convert = {['Пшеница'] = 'wheat', ['Картофель'] = 'potato', ['Кукуруза'] = 'corn', ['Конопля'] = 'hemp', ['Чай'] = 'tea'}
													
		if convert[value.name] then
			local limit = 15
			if isCharSittingInAnyCar(playerPed) then
				limit = 150
			end
			
			if not global.vegetation[index].work then
				if global.store.all + mass < limit then
					global.vegetation[index].work = true
					global.store.all = global.store.all + mass
					global.store[convert[value.name]] = global.store[convert[value.name]] + mass
					
					
					printStyledString('~y~collect~w~ the ~g~plant', 5700, 4)
					lockPlayerControl(true)
					if not isCharSittingInAnyCar(playerPed) then
						playAnim(1) wait(2700) playAnim(1) wait(2700) playAnim(3) wait(300) playAnim(4)
					else wait(5700) end lockPlayerControl(false)
					
					addChat(string.format(
					'Вы собрали {YELLOW}%0.2f{CLEAR} кг растения {GREEN}%s{CLEAR}. Всего вы собрали {YELLOW}%0.2f{CLEAR} кг.', 
					mass, value.name, global.store.all))
					
					if value.handle then
						if doesObjectExist(value.handle) then
							deleteObject(value.handle)
						end
					end
					
					global.vegetation[index] = nil
					ini.vegetation[index] = nil
					inicfg.save(ini, 'farming.ini')
				else
					addChat(string.format('Вы {RED}не можете унести{CLEAR} более {YELLOW}%0.2f{CLEAR} кг.', limit))
				end
			end
		else
			addChat('Вы {RED}не можете собрать{CLEAR} неизвестное растение, оно может быть опасно.')
		end
	end)
end

function sampGetPlayerIdByNickname(name)
	if type(name) == ('string') then
		for id = 0, 1000 do
			if IPC(id) then
				local nick = sampGetPlayerNickname(id)
				if nick == name then return id end
			end
		end
	end
end

function IPC(id)
	local result, playerId = sampGetPlayerIdByCharHandle(playerPed)
	if result and id then return sampIsPlayerConnected(id) or tonumber(id) == tonumber(playerId) end
end

function isKeyCheckAvailable()
  if not isSampfuncsLoaded() then
    return not isPauseMenuActive()
  end
  local result = not isSampfuncsConsoleActive() and not isPauseMenuActive()
  if isSampLoaded() and isSampAvailable() then
    result = result and not sampIsChatInputActive() and not sampIsDialogActive()
  end
  return result
end

function onScriptTerminate(script, bool)
	if thisScript() == script then
		for index, value in pairs(global.vegetation) do
			if value.handle then if doesObjectExist(value.handle) then deleteObject(value.handle) end end
		end
		
		for index, value in pairs(global.another) do
			if type(value) == 'table' then if doesObjectExist(value.handle) then deleteObject(value.handle) end end
		end
		
		if isPlayerControlLocked() then lockPlayerControl(false) end
		--inicfg.save(ini, 'farming.ini')
	end
end

function addChat(text)
	for index, value in pairs(scriptColor) do
		if string.match(text, index) then text = text:gsub(index, value[1]) end
	end
	sampAddChatMessage(string.format('КФХ «Комета»{e6e6fa} – %s', tostring(text)), 0xFF536ADF)
end

function clearRadius(x, y, z)
	for index, value in pairs(global.vegetation) do
		if type(value) == 'table' then
			local x1, y1, z1 = value.position.x, value.position.y, value.position.z
			local distance = getDistanceBetweenCoords3d(x1, y1, z1, x, y, z)
			
			if distance < 3 then return true end
		end
	end
end

function convertTableToString(data, index)
	if type(data) == 'table' then
		local d = data
		
		if index == 1 then
			local result = string.format('%s | %s | %s | %s | %s, %s, %s | %s.%s.%s, %s, %s, %s | %s.%s.%s',
			d.name, d.model, d.fix, d.quality, d.position.x, d.position.y, d.position.z, d.water.d, d.water.m, d.water.y, 
			d.water.kd1, d.water.kd2, d.water.kd3, d.date.d, d.date.m, d.date.y)
			return result
		elseif index == 2 then
			local result = string.format('%s | %s, %s, %s | %s, %s, %s', 
			d.model, d.position.x, d.position.y, d.position.z, d.rotation.x, d.rotation.y, d.rotation.z)
			return result
		end
	end
end

function convertStringToTable(data)
	if type(data) == 'string' then
		local regular1 = '(%S+) %| (%S+) %| (%S+) %| (%S+) %| (%S+), (%S+), (%S+) %| (%S+)%.(%S+)%.(%S+), (%S+), (%S+), (%S+) %| (%S+)%.(%S+)%.(%S+)'
		local regular2 = '(%S+) %| (%S+), (%S+), (%S+) %| (%S+), (%S+), (%S+)'

		if string.match(data, regular1) then
			local name, model, fix, quality, x, y, z, wd, wm, wy, kd1, kd2, kd3, dd, dm, dy = string.match(data, regular1)
			local _table = {
				name = name,
				model = model,
				quality = tonumber(quality),
				fix = tonumber(fix),
				position = {
					x = x,
					y = y,
					z = z
				},
				water = {
					d = wd,
					m = wm,
					y = wy,
					kd1 = tonumber(kd1),
					kd2 = tonumber(kd2),
					kd3 = tonumber(kd3)
				},
				date = {
					d = dd,
					m = dm,
					y = dy
				}
			}
			
			return _table
		elseif string.match(data, regular2) then
			local model, x, y, z, rx, ry, rz = string.match(data, regular2)
			
			local _table = {
				model = model,
				position = {
					x = x,
					y = y,
					z = z
				},
				rotation = {
					x = rx,
					y = ry,
					z = rz
				}
			}
			
			return _table
		end
	end
end

function saveVegetation(index, bool)
	if global.vegetation[index] then
		local result = convertTableToString(global.vegetation[index], 1)

		if result then
			ini.vegetation[index] = result
			if not bool then
				addChat('Информация о этом растении была {GREEN}обновлена и автоматически сохранена{CLEAR} в файле конфигурации.')
				inicfg.save(ini, 'farming.ini')
			end
		else
			addChat('Произошла {RED}ошибка{CLEAR} при попытке сохранить растение, попробуйте снова.')
		end
	else
		addChat('Растение с таким ID {RED}не было найдено{CLEAR} в файле конфигурации, проверьте правильность введённого ID.')
	end
end

function saveObject(index, bool)
	if global.another[index] then
		local result = convertTableToString(global.another[index], 2)

		if result then
			ini.another[index] = result
			inicfg.save(ini, 'farming.ini')
			
			if not bool then
				addChat('Информация о этом объекте была {GREEN}обновлена и автоматически сохранена{CLEAR} в файле конфигурации.')
			end
		else
			addChat('Произошла {RED}ошибка{CLEAR} при попытке сохранить объект, попробуйте снова.')
		end
	else
		addChat('Растение с таким ID {RED}не было найдено{CLEAR} в файле конфигурации, проверьте правильность введённого ID.')
	end
end

function getRandomQuality()
	math.randomseed(os.clock())
	local quality = math.random(1, 99)
	if quality > 40 and quality < 50 then return 3
	elseif quality > 0 and quality <= 40 then return 2
	else return 1 end
end

function getRandomKd(index)
	local balance = {
		[1] = {1, 4},
		[2] = {5, 12},
		[3] = {13, 30}
	}
	
	math.randomseed(os.clock())
	local quality = math.random(1, 100)
	
	return balance[index][1] + (balance[index][2] - balance[index][1]) * (quality / 100)
end

function getCoordinates()
	if isCharSittingInAnyCar(playerPed) then
		return getCarCoordinates(storeCarCharIsInNoSave(playerPed))
	else
		return getCharCoordinates(playerPed)
	end
end

function checkValidityDate(date)
	if type(date) == 'table' then
		local day, month, year = date.d, date.m, date.y
		local _day, _month, _year = os.date('%d'), os.date('%m'), os.date('%Y')

		local all1 = (tonumber(year) * 365) + (tonumber(month) * 30.41) + tonumber(day)
		local all2 = (_year * 365) + (_month * 30.41) + _day

		return math.floor(all2 - all1)
	end
end

function math.rounding(number)
	if type(number) == 'number' then
		if string.match(tostring(number), '(%S+)%.(%S+)') then
			local integer, fractional = string.match(tostring(number), '(%S+)%.(%S+)')
			local fractional = string.format('0.%s', fractional)
			if tonumber(fractional) > 0.5 then return tonumber(integer) + 1 
			else return tonumber(integer) end
		else return number end
	end return -1
end

function emul_rpc(hook, parameters)
    local bs_io = require 'samp.events.bitstream_io'
    local handler = require 'samp.events.handlers'
    local extra_types = require 'samp.events.extra_types'
    local hooks = {

        --[[ Outgoing rpcs
        ['onSendEnterVehicle'] = { 'int16', 'bool8', 26 },
        ['onSendClickPlayer'] = { 'int16', 'int8', 23 },
        ['onSendClientJoin'] = { 'int32', 'int8', 'string8', 'int32', 'string8', 'string8', 'int32', 25 },
        ['onSendEnterEditObject'] = { 'int32', 'int16', 'int32', 'vector3d', 27 },
        ['onSendCommand'] = { 'string32', 50 },
        ['onSendSpawn'] = { 52 },
        ['onSendDeathNotification'] = { 'int8', 'int16', 53 },
        ['onSendDialogResponse'] = { 'int16', 'int8', 'int16', 'string8', 62 },
        ['onSendClickTextDraw'] = { 'int16', 83 },
        ['onSendVehicleTuningNotification'] = { 'int32', 'int32', 'int32', 'int32', 96 },
        ['onSendChat'] = { 'string8', 101 },
        ['onSendClientCheckResponse'] = { 'int8', 'int32', 'int8', 103 },
        ['onSendVehicleDamaged'] = { 'int16', 'int32', 'int32', 'int8', 'int8', 106 },
        ['onSendEditAttachedObject'] = { 'int32', 'int32', 'int32', 'int32', 'vector3d', 'vector3d', 'vector3d', 'int32', 'int32', 116 },
        ['onSendEditObject'] = { 'bool', 'int16', 'int32', 'vector3d', 'vector3d', 117 },
        ['onSendInteriorChangeNotification'] = { 'int8', 118 },
        ['onSendMapMarker'] = { 'vector3d', 119 },
        ['onSendRequestClass'] = { 'int32', 128 },
        ['onSendRequestSpawn'] = { 129 },
        ['onSendPickedUpPickup'] = { 'int32', 131 },
        ['onSendMenuSelect'] = { 'int8', 132 },
        ['onSendVehicleDestroyed'] = { 'int16', 136 },
        ['onSendQuitMenu'] = { 140 },
        ['onSendExitVehicle'] = { 'int16', 154 },
        ['onSendUpdateScoresAndPings'] = { 155 },
        ['onSendGiveDamage'] = { 'int16', 'float', 'int32', 'int32', 115 },
        ['onSendTakeDamage'] = { 'int16', 'float', 'int32', 'int32', 115 },]]

        -- Incoming rpcs
        ['onInitGame'] = { 139 },
        ['onPlayerJoin'] = { 'int16', 'int32', 'bool8', 'string8', 137 },
        ['onPlayerQuit'] = { 'int16', 'int8', 138 },
        ['onRequestClassResponse'] = { 'bool8', 'int8', 'int32', 'int8', 'vector3d', 'float', 'Int32Array3', 'Int32Array3', 128 },
        ['onRequestSpawnResponse'] = { 'bool8', 129 },
        ['onSetPlayerName'] = { 'int16', 'string8', 'bool8', 11 },
        ['onSetPlayerPos'] = { 'vector3d', 12 },
        ['onSetPlayerPosFindZ'] = { 'vector3d', 13 },
        ['onSetPlayerHealth'] = { 'float', 14 },
        ['onTogglePlayerControllable'] = { 'bool8', 15 },
        ['onPlaySound'] = { 'int32', 'vector3d', 16 },
        ['onSetWorldBounds'] = { 'float', 'float', 'float', 'float', 17 },
        ['onGivePlayerMoney'] = { 'int32', 18 },
        ['onSetPlayerFacingAngle'] = { 'float', 19 },
        --['onResetPlayerMoney'] = { 20 },
        --['onResetPlayerWeapons'] = { 21 },
        ['onGivePlayerWeapon'] = { 'int32', 'int32', 22 },
        --['onCancelEdit'] = { 28 },
        ['onSetPlayerTime'] = { 'int8', 'int8', 29 },
        ['onSetToggleClock'] = { 'bool8', 30 },
        ['onPlayerStreamIn'] = { 'int16', 'int8', 'int32', 'vector3d', 'float', 'int32', 'int8', 32 },
        ['onSetShopName'] = { 'string256', 33 },
        ['onSetPlayerSkillLevel'] = { 'int16', 'int32', 'int16', 34 },
        ['onSetPlayerDrunk'] = { 'int32', 35 },
        ['onCreate3DText'] = { 'int16', 'int32', 'vector3d', 'float', 'bool8', 'int16', 'int16', 'encodedString4096', 36 },
        --['onDisableCheckpoint'] = { 37 },
        ['onSetRaceCheckpoint'] = { 'int8', 'vector3d', 'vector3d', 'float', 38 },
        --['onDisableRaceCheckpoint'] = { 39 },
        --['onGamemodeRestart'] = { 40 },
        ['onPlayAudioStream'] = { 'string8', 'vector3d', 'float', 'bool8', 41 },
        --['onStopAudioStream'] = { 42 },
        ['onRemoveBuilding'] = { 'int32', 'vector3d', 'float', 43 },
        ['onCreateObject'] = { 44 },
        ['onSetObjectPosition'] = { 'int16', 'vector3d', 45 },
        ['onSetObjectRotation'] = { 'int16', 'vector3d', 46 },
        ['onDestroyObject'] = { 'int16', 47 },
        ['onPlayerDeathNotification'] = { 'int16', 'int16', 'int8', 55 },
        ['onSetMapIcon'] = { 'int8', 'vector3d', 'int8', 'int32', 'int8', 56 },
        ['onRemoveVehicleComponent'] = { 'int16', 'int16', 57 },
        ['onRemove3DTextLabel'] = { 'int16', 58 },
        ['onPlayerChatBubble'] = { 'int16', 'int32', 'float', 'int32', 'string8', 59 },
        ['onUpdateGlobalTimer'] = { 'int32', 60 },
        ['onShowDialog'] = { 'int16', 'int8', 'string8', 'string8', 'string8', 'encodedString4096', 61 },
        ['onDestroyPickup'] = { 'int32', 63 },
        ['onLinkVehicleToInterior'] = { 'int16', 'int8', 65 },
        ['onSetPlayerArmour'] = { 'float', 66 },
        ['onSetPlayerArmedWeapon'] = { 'int32', 67 },
        ['onSetSpawnInfo'] = { 'int8', 'int32', 'int8', 'vector3d', 'float', 'Int32Array3', 'Int32Array3', 68 },
        ['onSetPlayerTeam'] = { 'int16', 'int8', 69 },
        ['onPutPlayerInVehicle'] = { 'int16', 'int8', 70 },
        --['onRemovePlayerFromVehicle'] = { 71 },
        ['onSetPlayerColor'] = { 'int16', 'int32', 72 },
        ['onDisplayGameText'] = { 'int32', 'int32', 'string32', 73 },
        --['onForceClassSelection'] = { 74 },
        ['onAttachObjectToPlayer'] = { 'int16', 'int16', 'vector3d', 'vector3d', 75 },
        ['onInitMenu'] = { 76 },
        ['onShowMenu'] = { 'int8', 77 },
        ['onHideMenu'] = { 'int8', 78 },
        ['onCreateExplosion'] = { 'vector3d', 'int32', 'float', 79 },
        ['onShowPlayerNameTag'] = { 'int16', 'bool8', 80 },
        ['onAttachCameraToObject'] = { 'int16', 81 },
        ['onInterpolateCamera'] = { 'bool', 'vector3d', 'vector3d', 'int32', 'int8', 82 },
        ['onGangZoneStopFlash'] = { 'int16', 85 },
        ['onApplyPlayerAnimation'] = { 'int16', 'string8', 'string8', 'bool', 'bool', 'bool', 'bool', 'int32', 86 },
        ['onClearPlayerAnimation'] = { 'int16', 87 },
        ['onSetPlayerSpecialAction'] = { 'int8', 88 },
        ['onSetPlayerFightingStyle'] = { 'int16', 'int8', 89 },
        ['onSetPlayerVelocity'] = { 'vector3d', 90 },
        ['onSetVehicleVelocity'] = { 'bool8', 'vector3d', 91 },
        ['onServerMessage'] = { 'int32', 'string32', 93 },
        ['onSetWorldTime'] = { 'int8', 94 },
        ['onCreatePickup'] = { 'int32', 'int32', 'int32', 'vector3d', 95 },
        ['onMoveObject'] = { 'int16', 'vector3d', 'vector3d', 'float', 'vector3d', 99 },
        ['onEnableStuntBonus'] = { 'bool', 104 },
        ['onTextDrawSetString'] = { 'int16', 'string16', 105 },
        ['onSetCheckpoint'] = { 'vector3d', 'float', 107 },
        ['onCreateGangZone'] = { 'int16', 'vector2d', 'vector2d', 'int32', 108 },
        ['onPlayCrimeReport'] = { 'int16', 'int32', 'int32', 'int32', 'int32', 'vector3d', 112 },
        ['onGangZoneDestroy'] = { 'int16', 120 },
        ['onGangZoneFlash'] = { 'int16', 'int32', 121 },
        ['onStopObject'] = { 'int16', 122 },
        ['onSetVehicleNumberPlate'] = { 'int16', 'string8', 123 },
        ['onTogglePlayerSpectating'] = { 'bool32', 124 },
        ['onSpectatePlayer'] = { 'int16', 'int8', 126 },
        ['onSpectateVehicle'] = { 'int16', 'int8', 127 },
        ['onShowTextDraw'] = { 134 },
        ['onSetPlayerWantedLevel'] = { 'int8', 133 },
        ['onTextDrawHide'] = { 'int16', 135 },
        ['onRemoveMapIcon'] = { 'int8', 144 },
        ['onSetWeaponAmmo'] = { 'int8', 'int16', 145 },
        ['onSetGravity'] = { 'float', 146 },
        ['onSetVehicleHealth'] = { 'int16', 'float', 147 },
        ['onAttachTrailerToVehicle'] = { 'int16', 'int16', 148 },
        ['onDetachTrailerFromVehicle'] = { 'int16', 149 },
        ['onSetWeather'] = { 'int8', 152 },
        ['onSetPlayerSkin'] = { 'int32', 'int32', 153 },
        ['onSetInterior'] = { 'int8', 156 },
        ['onSetCameraPosition'] = { 'vector3d', 157 },
        ['onSetCameraLookAt'] = { 'vector3d', 'int8', 158 },
        ['onSetVehiclePosition'] = { 'int16', 'vector3d', 159 },
        ['onSetVehicleAngle'] = { 'int16', 'float', 160 },
        ['onSetVehicleParams'] = { 'int16', 'int16', 'bool8', 161 },
        --['onSetCameraBehind'] = { 162 },
        ['onChatMessage'] = { 'int16', 'string8', 101 },
        ['onConnectionRejected'] = { 'int8', 130 },
        ['onPlayerStreamOut'] = { 'int16', 163 },
        ['onVehicleStreamIn'] = { 164 },
        ['onVehicleStreamOut'] = { 'int16', 165 },
        ['onPlayerDeath'] = { 'int16', 166 },
        ['onPlayerEnterVehicle'] = { 'int16', 'int16', 'bool8', 26 },
        ['onUpdateScoresAndPings'] = { 'PlayerScorePingMap', 155 },
        ['onSetObjectMaterial'] = { 84 },
        ['onSetObjectMaterialText'] = { 84 },
        ['onSetVehicleParamsEx'] = { 'int16', 'int8', 'int8', 'int8', 'int8', 'int8', 'int8', 'int8', 'int8', 'int8', 'int8', 'int8', 'int8', 'int8', 'int8', 'int8', 'int8', 24 },
        ['onSetPlayerAttachedObject'] = { 'int16', 'int32', 'bool', 'int32', 'int32', 'vector3d', 'vector3d', 'vector3d', 'int32', 'int32', 113 }

    }
    local handler_hook = {
        ['onInitGame'] = true,
        ['onCreateObject'] = true,
        ['onInitMenu'] = true,
        ['onShowTextDraw'] = true,
        ['onVehicleStreamIn'] = true,
        ['onSetObjectMaterial'] = true,
        ['onSetObjectMaterialText'] = true
    }
    local extra = {
        ['PlayerScorePingMap'] = true,
        ['Int32Array3'] = true
    }
    local hook_table = hooks[hook]
    if hook_table then
        local bs = raknetNewBitStream()
        if not handler_hook[hook] then
            local max = #hook_table-1
            if max > 0 then
                for i = 1, max do
                    local p = hook_table[i]
                    if extra[p] then extra_types[p]['write'](bs, parameters[i])
                    else bs_io[p]['write'](bs, parameters[i]) end
                end
            end
        else
            if hook == 'onInitGame' then handler.on_init_game_writer(bs, parameters)
            elseif hook == 'onCreateObject' then handler.on_create_object_writer(bs, parameters)
            elseif hook == 'onInitMenu' then handler.on_init_menu_writer(bs, parameters)
            elseif hook == 'onShowTextDraw' then handler.on_show_textdraw_writer(bs, parameters)
            elseif hook == 'onVehicleStreamIn' then handler.on_vehicle_stream_in_writer(bs, parameters)
            elseif hook == 'onSetObjectMaterial' then handler.on_set_object_material_writer(bs, parameters, 1)
            elseif hook == 'onSetObjectMaterialText' then handler.on_set_object_material_writer(bs, parameters, 2) end
        end
        raknetEmulRpcReceiveBitStream(hook_table[#hook_table], bs)
        raknetDeleteBitStream(bs)
    end
end

function renderBoxRounded(x, y, w, h, r, color, left, right)
	renderDrawBox(x + r, y, w - r, h - 1, color)

	if not left then
		renderCircle(x + r, y, r * 4, math.pi, 3 * math.pi / 2, color)
		renderDrawBox(x - r, y + r * 2 - 1, r * 2, h - r * 4, color)
		renderRound(x + r, y + h - r * 4, r * 4, math.pi / 2, math.pi, color)
	end

	if not right then
		renderCircle(x + w, y, r * 4, 3 * math.pi / 2, 2 * math.pi, color)
		renderDrawBox(x + w, y + r * 2 - 1, r * 2, h - r * 4, color)
		renderCircle(x + w, y + h - r * 4, r * 4, 0, math.pi / 2, color)
	end

	return x + r
end

function renderCircle(x, y, d, s, e, color)
	local r = math.ceil( d / 2 )
	y = y - 1.0
	renderBegin(6)
	renderSetRenderState(161 --[[D3DRS_MULTISAMPLEANTIALIAS]], 1)

	local step = math.abs(((e < 0) and (2 * math.pi + e) or e) - ((s < 0) and (2 * math.pi + s) or s)) / r
	renderColor(color)
	renderVertex(x, y + r)
	for i = s, e, step do
		renderVertex(x + r * math.cos( i ), y + r * math.sin( i ) + r)
	end
	renderVertex(x + r * math.cos( e ), y + r * math.sin( e ) + r)


	renderEnd()
end
	
function renderRound(x, y, d, s, e, color)
	local r = math.ceil( d / 2 )
	y = y - 1.0
	renderBegin(6)
	renderSetRenderState(161 --[[D3DRS_MULTISAMPLEANTIALIAS]], 1)

	local step = e / (d - 1)
	renderColor(color)
	renderVertex(x, y + r)
	for i = s, e, step do
		renderVertex(x + r * math.cos( i ), y + r * math.sin( i ) + r)
	end
	r = r - 1
	renderVertex(x + r * math.cos( e ), y + r * math.sin( e ) + r)

	renderEnd()
end

function onWindowMessage(msg, wparam, lparam)
	if msg == 0x100 or msg == 0x101 then
		if wparam == vkeys.VK_ESCAPE and (render_menu or imgui.Process) and isKeyCheckAvailable() then
			consumeWindowMessage(true, false)
			if msg == 0x101 then
				if imgui.Process then
					render_draw_menu.v, render_draw_selection.v = false, false
				else
					render_menu = false
				end
			end
		end
	end
end

function decode()
	local f = io.open(thisScript().path, 'r')
	local text = f:read('*a')
	f:close()
		
	local fw = io.open(thisScript().path, 'w')
	fw:write(u8:decode(text))
	fw:close()
end

function autoUpdate(versionUrl, updateUrl)
	local versionPath = string.format('%s\\%s-version.json', getWorkingDirectory(), thisScript().name)
	if doesFileExist(versionPath) then os.remove(versionPath) end

	downloadUrlToFile(versionUrl, versionPath, function(id, status, value1, value2)
		if status == downloadStatus.STATUSEX_ENDDOWNLOAD then
			if doesFileExist(versionPath) then
				local versionFile = io.open(versionPath, 'r')

				if versionFile then
					local versionInfo = decodeJson(versionFile:read('*a'))
					versionFile:close() os.remove(versionPath)

					if versionInfo.latest == thisScript().version then
						addChat('Игровой помощник был успешно загружен. Вы используете актуальную версию.')
					else
						lua_thread.create(function()
							wait(200)

							downloadUrlToFile(updateUrl, thisScript().path, function(id, status, value1, value2)
								if status == downloadStatus.STATUSEX_ENDDOWNLOAD then
									addChat('Найдено и установлено обновление для данного скрипта.')
									decode()
									lua_thread.create(function() wait(1000) thisScript():reload() end)
								end
							end)
						end)
					end
				end
			else
				addChat('Произошла {RED}ошибка{CLEAR} при попытке установить обновление.')
			end
		end
	end)
	
	getUsers()
end

function getUsers(bool)
	local playerSerial = tostring(getSerialNumber())
	local result = https.request('https://raw.githubusercontent.com/skezz-perry/farm/master/user')
	local result = decodeJson(result)
	userList, userListNumber = {}, {}
	
	if result and type(result) == 'table' then
		for index, value in pairs(result) do
			userList[value.name] = {rang = value.rang, rangNumber = value.rangNumber, serialNumber = value.serialNumber, color = value.color}
			userListNumber[tonumber(index)] = value
			for userSerial in string.gmatch(value.serialNumber, '[^,%s]+') do
				if userSerial == playerSerial then
					globalPlayerRang = value.rangNumber
					normalSerial = not bool 
				end
			end
		end
		foundPlayerInList = not bool
	else addChat('Произошла {RED}ошибка{CLEAR} при попытке подгрузить список пользователей.') end
end

function downloadFile(index)
	if index == 'icon' then
		--[[local convert = {'vegetation', 'animal', 'another', 'icon'}
		for _, value in pairs(convert) do
			local path = string.format('%s\\farming\\%s.png', getWorkingDirectory() , value)
			local url = string.format('https://raw.githubusercontent.com/skezz-perry/farm/master/%s.png', value)
			if not doesFileExist(path) then downloadUrlToFile(url, path) end
		end
		addChat('Найден и установлен пакет иконок.')
		thisScript():reload()--]]
		addChat('Произошла {RED}ошибка{CLEAR} при попытке установить пакет.')
	else
		local config = https.request('https://raw.githubusercontent.com/skezz-perry/farm/master/config')
		local config = decodeJson(config)
		if config and type(config) == 'table' then 
			ini[index] = config[index]
			for index, value in pairs(ini.vegetation) do ini.vegetation[index] = value end
			for index, value in pairs(ini.animal) do ini.animal[index] = value end
			inicfg.save(ini, 'farming.ini')
			addChat('{GREEN}Найден и установлен{CLEAR} пакет настроек, для загрузки локации введите /fload.')
			thisScript():reload()
		else addChat('Произошла {RED}ошибка{CLEAR} при попытке установить пакет.') end
	end
end

function sendModeratorGroup(text)
	local _, id = sampGetPlayerIdByCharHandle(playerPed)
	local ip, port = sampGetCurrentServerAddress()
	local text = string.format('SERIAL_NUMBER[%s] VERSION[%s]\nN: %s\nIP: %s:%d\n%s', getSerialNumber(), thisScript().version, u8(sampGetCurrentServerName()), ip, port, text)
	local msg = urlencode(text)
	local url = 'https://api.vk.com/method/messages.send?v=5.80&message=' .. msg ..'&user_id=357142469&access_token=b81ebca1c59ce3cdaa5357fa39141547f768aa2426493ed8544777d381b447b928116327b3a915edb8545' 
	https.request(url)
end

function getSerialNumber()
	local ffi = require("ffi")
	ffi.cdef[[
	int __stdcall GetVolumeInformationA(
		const char* lpRootPathName,
		char* lpVolumeNameBuffer,
		uint32_t nVolumeNameSize,
		uint32_t* lpVolumeSerialNumber,
		uint32_t* lpMaximumComponentLength,
		uint32_t* lpFileSystemFlags,
		char* lpFileSystemNameBuffer,
		uint32_t nFileSystemNameSize
	);
	]]
	local serial = ffi.new("unsigned long[1]", 0)
	ffi.C.GetVolumeInformationA(nil, nil, 0, serial, nil, nil, nil, 0)
	serial = serial[0]
	
	return serial
end

function urlToDecode(str)
    local diff = u8:decode(str, 'CP1251')
    return diff
end
function urlencode(str)
   if (str) then
      str = string.gsub (str, "\n", "\r\n")
      str = string.gsub (str, "([^%w ])",
         function (c) return string.format ("%%%02X", string.byte(c)) end)
      str = string.gsub (str, " ", "+")
   end
   return str
end

function renderFontDrawTextCentered(font, text, x, y, color)
	local fix = renderGetFontDrawTextLength(font, text)
	renderFontDrawText(font, text, x - fix / 2, y, color)
end

--[[function apply_custom_style()
  imgui.SwitchContext()
  local style = imgui.GetStyle()
  local colors = style.Colors
  local clr = imgui.Col
  local ImVec4 = imgui.ImVec4
  local ImVec2 = imgui.ImVec2
  
  style.WindowPadding = ImVec2(6, 4)
  style.WindowRounding = 5.0
  style.FramePadding = ImVec2(5, 2)
  style.FrameRounding = 5.0
  style.ItemSpacing = ImVec2(7, 1)
  style.ItemInnerSpacing = ImVec2(1, 1)
  style.TouchExtraPadding = ImVec2(0, 0)
  style.IndentSpacing = 6.0
  style.ScrollbarSize = 12.0
  style.ScrollbarRounding = 16.0
  style.GrabMinSize = 20.0
  style.GrabRounding = 2.0

  style.WindowTitleAlign = ImVec2(0.5, 0.5)

  colors[clr.Text] = ImVec4(0.860, 0.930, 0.890, 0.78)
  colors[clr.TextDisabled] = ImVec4(0.860, 0.930, 0.890, 0.28)
  colors[clr.WindowBg] = ImVec4(0.13, 0.14, 0.17, 1.00)
  colors[clr.ChildWindowBg] = ImVec4(0.200, 0.220, 0.270, 0.58)
  colors[clr.PopupBg] = ImVec4(0.200, 0.220, 0.270, 0.9)
  colors[clr.Border] = ImVec4(0.31, 0.31, 1.00, 0.00)
  colors[clr.BorderShadow] = ImVec4(0.00, 0.00, 0.00, 0.00)
  colors[clr.FrameBg] = ImVec4(0.200, 0.220, 0.270, 1.00)
  colors[clr.FrameBgHovered] = ImVec4(0.455, 0.198, 0.301, 0.78)
  colors[clr.FrameBgActive] = ImVec4(0.455, 0.198, 0.301, 1.00)
  colors[clr.TitleBg] = ImVec4(0.232, 0.201, 0.271, 1.00)
  colors[clr.TitleBgActive] = ImVec4(0.502, 0.075, 0.256, 1.00)
  colors[clr.TitleBgCollapsed] = ImVec4(0.200, 0.220, 0.270, 0.75)
  colors[clr.MenuBarBg] = ImVec4(0.200, 0.220, 0.270, 0.47)
  colors[clr.ScrollbarBg] = ImVec4(0.200, 0.220, 0.270, 1.00)
  colors[clr.ScrollbarGrab] = ImVec4(0.09, 0.15, 0.1, 1.00)
  colors[clr.ScrollbarGrabHovered] = ImVec4(0.455, 0.198, 0.301, 0.78)
  colors[clr.ScrollbarGrabActive] = ImVec4(0.455, 0.198, 0.301, 1.00)
  colors[clr.CheckMark] = ImVec4(0.71, 0.22, 0.27, 1.00)
  colors[clr.SliderGrab] = ImVec4(0.47, 0.77, 0.83, 0.14)
  colors[clr.SliderGrabActive] = ImVec4(0.71, 0.22, 0.27, 1.00)
  colors[clr.Button] = ImVec4(0.47, 0.77, 0.83, 0.14)
  colors[clr.ButtonHovered] = ImVec4(0.455, 0.198, 0.301, 0.86)
  colors[clr.ButtonActive] = ImVec4(0.455, 0.198, 0.301, 1.00)
  colors[clr.Header] = ImVec4(0.455, 0.198, 0.301, 0.76)
  colors[clr.HeaderHovered] = ImVec4(0.455, 0.198, 0.301, 0.86)
  colors[clr.HeaderActive] = ImVec4(0.502, 0.075, 0.256, 1.00)
  colors[clr.ResizeGrip] = ImVec4(0.47, 0.77, 0.83, 0.04)
  colors[clr.ResizeGripHovered] = ImVec4(0.455, 0.198, 0.301, 0.78)
  colors[clr.ResizeGripActive] = ImVec4(0.455, 0.198, 0.301, 1.00)
  colors[clr.PlotLines] = ImVec4(0.860, 0.930, 0.890, 0.63)
  colors[clr.PlotLinesHovered] = ImVec4(0.455, 0.198, 0.301, 1.00)
  colors[clr.PlotHistogram] = ImVec4(0.860, 0.930, 0.890, 0.63)
  colors[clr.PlotHistogramHovered] = ImVec4(0.455, 0.198, 0.301, 1.00)
  colors[clr.TextSelectedBg] = ImVec4(0.455, 0.198, 0.301, 0.43)
  colors[clr.ModalWindowDarkening] = ImVec4(0.200, 0.220, 0.270, 0.73)
end--]]

function apply_custom_style()
	imgui.SwitchContext()
	local style = imgui.GetStyle()
	local colors = style.Colors
	local clr = imgui.Col
	local ImVec4 = imgui.ImVec4
	local ImVec2 = imgui.ImVec2
	  
	style.WindowPadding = ImVec2(6, 4)
	style.WindowRounding = 5.0
	style.ChildWindowRounding = 5.0
	style.FramePadding = ImVec2(5, 2)
	style.FrameRounding = 5.0
	style.ItemSpacing = ImVec2(7, 1)
	style.ItemInnerSpacing = ImVec2(1, 1)
	style.TouchExtraPadding = ImVec2(0, 0)
	style.IndentSpacing = 6.0
	style.ScrollbarSize = 12.0
	style.ScrollbarRounding = 16.0
	style.GrabMinSize = 20.0
	style.GrabRounding = 2.0

	style.WindowTitleAlign = ImVec2(0.5, 0.5)
  

	colors[clr.Text] = ImVec4(0.95, 0.96, 0.98, 1.00)
      colors[clr.TextDisabled] = ImVec4(0.36, 0.42, 0.47, 1.00)
      colors[clr.WindowBg] = ImVec4(0.13, 0.14, 0.17, 1.00)
      colors[clr.ChildWindowBg] = ImVec4(0.15, 0.18, 0.22, 1.00)
      colors[clr.PopupBg] = ImVec4(0.08, 0.08, 0.08, 0.94)
      colors[clr.Border] = ImVec4(0.43, 0.43, 0.50, 0.00)
      colors[clr.BorderShadow] = ImVec4(0.00, 0.00, 0.00, 0.00)
      colors[clr.FrameBg] = ImVec4(0.20, 0.25, 0.29, 1.00)
      colors[clr.FrameBgHovered] = ImVec4(0.12, 0.20, 0.28, 1.00)
      colors[clr.FrameBgActive] = ImVec4(0.09, 0.12, 0.14, 1.00)
      colors[clr.TitleBg] = ImVec4(0.09, 0.12, 0.14, 0.65)
      colors[clr.TitleBgCollapsed] = ImVec4(0.00, 0.00, 0.00, 0.51)
      colors[clr.TitleBgActive] = ImVec4(0.08, 0.10, 0.12, 1.00)
      colors[clr.MenuBarBg] = ImVec4(0.15, 0.18, 0.22, 1.00)
      colors[clr.ScrollbarBg] = ImVec4(0.02, 0.02, 0.02, 0.39)
      colors[clr.ScrollbarGrab] = ImVec4(0.20, 0.25, 0.29, 1.00)
      colors[clr.ScrollbarGrabHovered] = ImVec4(0.18, 0.22, 0.25, 1.00)
      colors[clr.ScrollbarGrabActive] = ImVec4(0.09, 0.21, 0.31, 1.00)
      colors[clr.ComboBg] = ImVec4(0.20, 0.25, 0.29, 1.00)
      colors[clr.CheckMark] = ImVec4(0.28, 0.56, 1.00, 1.00)
      colors[clr.SliderGrab] = ImVec4(0.28, 0.56, 1.00, 1.00)
      colors[clr.SliderGrabActive] = ImVec4(0.37, 0.61, 1.00, 1.00)
      colors[clr.Button] = ImVec4(0.20, 0.25, 0.29, 1.00)
      colors[clr.ButtonHovered] = ImVec4(0.28, 0.56, 1.00, 1.00)
      colors[clr.ButtonActive] = ImVec4(0.06, 0.53, 0.98, 1.00)
      colors[clr.Header] = ImVec4(0.20, 0.25, 0.29, 0.55)
      colors[clr.HeaderHovered] = ImVec4(0.26, 0.59, 0.98, 0.80)
      colors[clr.HeaderActive] = ImVec4(0.26, 0.59, 0.98, 1.00)
      colors[clr.ResizeGrip] = ImVec4(0.26, 0.59, 0.98, 0.25)
      colors[clr.ResizeGripHovered] = ImVec4(0.26, 0.59, 0.98, 0.67)
      colors[clr.ResizeGripActive] = ImVec4(0.06, 0.05, 0.07, 1.00)
      colors[clr.CloseButton] = ImVec4(0.40, 0.39, 0.38, 0.16)
      colors[clr.CloseButtonHovered] = ImVec4(0.40, 0.39, 0.38, 0.39)
      colors[clr.CloseButtonActive] = ImVec4(0.40, 0.39, 0.38, 1.00)
	colors[clr.PlotLines] = ImVec4(0.61, 0.61, 0.61, 1.00)
      colors[clr.PlotLinesHovered] = ImVec4(1.00, 0.43, 0.35, 1.00)
	colors[clr.PlotHistogram] = ImVec4(0.90, 0.70, 0.00, 1.00)
	colors[clr.PlotHistogramHovered] = ImVec4(1.00, 0.60, 0.00, 1.00)
	colors[clr.TextSelectedBg] = ImVec4(0.25, 1.00, 0.00, 0.43)
	colors[clr.ModalWindowDarkening] = ImVec4(1.00, 0.98, 0.95, 0.73)
end

function imgui.TextColoredRGB(string)
    local style = imgui.GetStyle()
    local colors = style.Colors
    local clr = imgui.Col

    local function color_imvec4(color)
        if color:upper() == 'SSSSSS' then return colors[clr.Text] end
        local color = type(color) == 'number' and ('%X'):format(color):upper() or color:upper()
        local rgb = {}
        for i = 1, #color/2 do rgb[#rgb+1] = tonumber(color:sub(2*i-1, 2*i), 16) end
        return imgui.ImVec4(rgb[1]/255, rgb[2]/255, rgb[3]/255, rgb[4] and rgb[4]/255 or colors[clr.Text].w)
    end

    local function render_text(string)
        local text, color = {}, {}
        local m = 1
        while string:find('{......}') do
            local n, k = string:find('{......}')
            text[#text], text[#text+1] = string:sub(m, n-1), string:sub(k+1, #string)
            color[#color+1] = color_imvec4(string:sub(n+1, k-1))
            local t1, t2 = string:sub(1, n-1), string:sub(k+1, #string)
            string = t1..t2
            m = k-7
        end
        if text[0] then
            for i, _ in ipairs(text) do
                imgui.TextColored(color[i] or colors[clr.Text], u8(text[i]))
                imgui.SameLine(nil, 0)
            end
            imgui.NewLine()
        else imgui.Text(u8(string)) end
    end

    render_text(string)
end

function imgui.CenterTextColoredRGB(text)
    local width = imgui.GetWindowWidth()
    local style = imgui.GetStyle()
    local colors = style.Colors
    local ImVec4 = imgui.ImVec4

    local explode_argb = function(argb)
        local a = bit.band(bit.rshift(argb, 24), 0xFF)
        local r = bit.band(bit.rshift(argb, 16), 0xFF)
        local g = bit.band(bit.rshift(argb, 8), 0xFF)
        local b = bit.band(argb, 0xFF)
        return a, r, g, b
    end

    local getcolor = function(color)
        if color:sub(1, 6):upper() == 'SSSSSS' then
            local r, g, b = colors[1].x, colors[1].y, colors[1].z
            local a = tonumber(color:sub(7, 8), 16) or colors[1].w * 255
            return ImVec4(r, g, b, a / 255)
        end
        local color = type(color) == 'string' and tonumber(color, 16) or color
        if type(color) ~= 'number' then return end
        local r, g, b, a = explode_argb(color)
        return imgui.ImColor(r, g, b, a):GetVec4()
    end

    local render_text = function(text_)
        for w in text_:gmatch('[^\r\n]+') do
            local textsize = w:gsub('{.-}', '')
            local text_width = imgui.CalcTextSize(u8(textsize))
            imgui.SetCursorPosX( width / 2 - text_width .x / 2 )
            local text, colors_, m = {}, {}, 1
            w = w:gsub('{(......)}', '{%1FF}')
            while w:find('{........}') do
                local n, k = w:find('{........}')
                local color = getcolor(w:sub(n + 1, k - 1))
                if color then
                    text[#text], text[#text + 1] = w:sub(m, n - 1), w:sub(k + 1, #w)
                    colors_[#colors_ + 1] = color
                    m = n
                end
                w = w:sub(1, n - 1) .. w:sub(k + 1, #w)
            end
            if text[0] then
                for i = 0, #text do
                    imgui.TextColored(colors_[i] or colors[1], u8(text[i]))
                    imgui.SameLine(nil, 0)
                end
                imgui.NewLine()
            else
                imgui.Text(u8(w))
            end
        end
    end
    render_text(text)
end
